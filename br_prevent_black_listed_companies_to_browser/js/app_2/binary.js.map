{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/upgrade_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_panel.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/DataTable/data_table.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/DataTable/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/DataTable/table_cell.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/DataTable/table_row.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar_div.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer_card.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/toggle_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker_input.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_portfolio.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/theme_wrapper.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Middlewares/is_client_allowed_to_visit.js","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_quick_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/Modules/Contract/index.js","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/card_list.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty_portfolio_message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/indicative_cell.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/portfolio_card.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Constants/data_table_constants.js","webpack:///./src/javascript/app_2/Modules/Portfolio/Containers/portfolio.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/index.js","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/control_widgets.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/top_widgets.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Containers/smart_chart.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Helpers/symbol.js","webpack:///./src/javascript/app_2/Modules/SmartChart/index.js","webpack:///./src/javascript/app_2/Modules/Statement/Components/amount_cell.jsx","webpack:///./src/javascript/app_2/Modules/Statement/Components/empty_statement_message.jsx","webpack:///./src/javascript/app_2/Modules/Statement/Components/statement_card.jsx","webpack:///./src/javascript/app_2/Modules/Statement/Components/statement_card_list.jsx","webpack:///./src/javascript/app_2/Modules/Statement/Constants/data_table_constants.js","webpack:///./src/javascript/app_2/Modules/Statement/Containers/statement.jsx","webpack:///./src/javascript/app_2/Modules/Statement/Containers/statement_filter.jsx","webpack:///./src/javascript/app_2/Modules/Statement/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/start_date.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/settings/components/menu/menu.jsx","webpack:///./src/javascript/app_2/Modules/settings/components/menu/menu_item.jsx","webpack:///./src/javascript/app_2/Modules/settings/components/menu/menu_list.jsx","webpack:///./src/javascript/app_2/Modules/settings/components/menu/mobile_dropdown.jsx","webpack:///./src/javascript/app_2/Modules/settings/components/section.jsx","webpack:///./src/javascript/app_2/Modules/settings/sections/account_password.jsx","webpack:///./src/javascript/app_2/Modules/settings/sections/api_token.jsx","webpack:///./src/javascript/app_2/Modules/settings/sections/authorized_applications.jsx","webpack:///./src/javascript/app_2/Modules/settings/sections/cashier_password.jsx","webpack:///./src/javascript/app_2/Modules/settings/sections/financial_assessment.jsx","webpack:///./src/javascript/app_2/Modules/settings/sections/limits.jsx","webpack:///./src/javascript/app_2/Modules/settings/sections/login_history.jsx","webpack:///./src/javascript/app_2/Modules/settings/sections/personal_details.jsx","webpack:///./src/javascript/app_2/Modules/settings/sections/self_exclusion.jsx","webpack:///./src/javascript/app_2/Modules/settings/settings.jsx","webpack:///./src/javascript/app_2/Modules/settings/settings_data.js","webpack:///./src/javascript/app_2/Services/Helpers/switch_account.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/subscription_manager.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/currency.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/index.js","webpack:///./src/javascript/config.js","webpack:///./src/templates/_common/components/loading.jsx","webpack:///external \"CIQ\""],"names":["getAccountInfo","loginid","currency","Client","get","is_virtual","account_type","getAccountTitle","icon","toLowerCase","title","makeAccountsList","getAllLoginids","map","undefined","filter","account","AccountSwitcher","props","setWrapperRef","node","wrapper_ref","handleClickOutside","event","accounts_toggle_btn","target","classList","contains","is_visible","toggle","state","accounts_list","document","addEventListener","removeEventListener","isLoggedIn","length","doSwitch","is_upgrade_enabled","onClickUpgrade","requestLogout","React","Component","propTypes","PropTypes","bool","func","UpgradeButton","onClick","Calendar","date_format","start_date","current_date","moment","utc","format","calendar_date","selected_date","calendar_view","children","footer","has_today_btn","id","max_date","min_date","isPeriodDisabled","navigators","calendarViews","panelSelectors","setToday","PureComponent","nextMonth","navigateTo","previousMonth","nextYear","previousYear","nextDecade","previousDecade","nextCentury","previousCentury","date","e","is_disabled","updateSelectedDate","month","updateSelected","year","decade","setState","value","unit","is_add","new_date","onSelect","moment_date","dataset","startOf","is_before","isBefore","is_after","isAfter","formatted_date","type","view_map","split","resetCalendar","default_date","now","start_of_period","end_of_period","endOf","defaultProps","add","object","string","is_nativepicker","oneOfType","number","CalendarButton","className","is_hidden","label","array","CalendarFooter","CalendarHeader","is_date_view","is_month_view","is_year_view","is_decade_view","hidden","clone","subtract","CalendarPanel","calendar_panel","default","getDays","dates","days","moment_today","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","first_day","day","last_day","moment_min_date","moment_max_date","moment_selected","i","push","idx","replace","moment_start_date","unix","is_active","isSame","is_today","active","today","disabled","week_headers","CalendarDays","item","CalendarPanelTypes","CalendarDecades","selected_year","decades","min_year","max_year","range","start_year","end_year","getMonthHeaders","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","CalendarMonths","selected_month","month_headers","Object","keys","CalendarYears","current_year","years","DataTable","alignHeader","data_source","first_body_row","el_table_body","firstChild","scrollbar_offset","el_table_head","offsetWidth","style","paddingRight","columns","getRowLink","onScroll","el","row_obj","arrayOf","MobxPropTypes","arrayOrObservableArray","TableCell","col_index","TableRow","to","is_footer","is_header","cells","renderCellContent","cell_content","cell_value","onConfirm","onCancel","window","location","href","URL","urlFor","DenialOfServiceModal","visible","Drawer","is_this_drawer_on","setRef","ref","hide","scrollToggle","hideDrawers","is_open","body","nextProps","alignment","is_main_drawer_on","is_notifications_drawer_on","closeBtn","drawer_bg_class","drawer_class","icon_class","icon_link","drawer_component","ui","DrawerHeader","drawer_header_class","DrawerItem","drawerItemClicked","collapseItems","link_to","text","custom_action","drawer_item_component","DrawerItems","is_collapsed","items","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","to_toggle","ToggleDrawer","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","shape","ErrorBoundary","componentDidCatch","error","info","hasError","render","message","ErrorComponent","FullPageModal","cancel_button_text","confirm_button_text","InkBar","left","width","inkbar_style","InkBarDiv","updateInkbarPosition","closest","clearInkBar","offsetLeft","querySelector","active_el","other_props","Children","cloneElement","child","Notifications","list","PopConfirm","handleClose","handleOpen","popconfirm_element","cancel_text","confirm_text","PopConfirmElement","onClose","wrapperRef","popconfirm_class","PortfolioDrawer","onMount","onUnmount","active_positions","is_empty","is_portfolio_drawer_on","toggleDrawer","body_content","portfolio_position","any","is_loading","modules","client","portfolio","togglePortfolioDrawer","PortfolioDrawerCard","expiry_time","indicative","status","underlying","LanguageDialog","is_settings_on","language_dialog_class","key","SettingsControl","name","SettingsDialog","footer_settings_btn","toggleDialog","settings_dialog_class","settings_dialog_container_class","is_language_dialog_visible","settings_content","header","content","GeneralSettings","ChartSettings","Tabs","active_tab_index","setActiveTab","index","TabContents","tab_container_class","tab_header_class","icon_name","TabsItem","elements","onChange","tab_class","TabsWrapper","getSizes","rootBounds","root","getBoundingClientRect","sizes","els","forEach","bounds","right","getUnderlineStyle","size","transition","Localize","str","replacers","localized","test","LoginPrompt","IconComponent","onLogin","onSignup","Money","amount","has_sign","is_formatted","sign","abs_value","Math","abs","final_amount","ToggleButton","toggled","toggle_style","Tooltip","UILoader","loading_class","DatePicker","is_datepicker_visible","is_close_btn_visible","handleVisibility","onClickOutside","mainNode","mode","updateDatePickerValue","onMouseEnter","is_clearable","onMouseLeave","onSelectCalendar","isValid","onChangeInput","clearDatePickerInput","updateStore","calendar","nativeEvent","iosClearDefault","defaultValue","setTimeout","placeholder","show","is_read_only","DatePickerInput","class_name","Button","has_effect","wrapperClassName","classes","button","wrapper","Dropdown","getDisplayText","findInArray","arr_list","find","some","bind","handleSelect","is_list_visible","Items","NativeSelect","Array","isArray","Fieldset","tooltip","field_left_class","InputField","error_messages","fractional_digits","helper","is_float","is_signed","max_length","prefix","required","has_error","has_valid_length","changeValue","signed_regex","is_number","RegExp","is_not_completed_number","has_zero_at_end","is_scientific_notation","input","TimePickerDropdown","selectOption","is_enabled","prev_hour","prev_minute","is_type_selected","last_updated_type","clear","stopPropagation","resetValues","hours","a","slice","minutes","is_hour_selected","is_minute_selected","prevProps","prevState","preClass","sessions","start_moment","start_moment_clone","minute","second","hour","saveHourRef","h","saveMinuteRef","mm","TimePicker","toggleDropDown","handleChange","arg","saveRef","nodeName","target_element","prefix_class","is_align_right","padding","value_split","NetworkStatus","class","ToggleFullScreen","onFullScreen","is_full_screen","fullscreen_map","element","toggleFullScreen","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","TogglePortfolio","toggle_portfolio_class","ToggleSettings","is_language_visible","is_settings_visible","toggleSettings","toggle_settings_class","AccountInfo","balance","is_dialog_on","is_demo","account_title","LoginButton","redirectToLogin","MenuLinks","Url","urlForStatic","ToggleMenuDrawer","ToggleNotificationsDrawer","BinaryLink","path","route","Error","exact","BinaryRoutes","normalizePath","findRouteByPath","routes_config","result","route_info","routes","isRouteVisible","is_logged_in","is_authenticated","getPath","route_path","params","reduce","p","getContractPath","contract_id","contract","RouteWithSubRoutes","renderFactory","component","Redirect","pathname","icon_component","default_title","GTM","pushDataLayer","website_name","header_links","trade","statement","initRoutesConfig","ContractDetails","Portfolio","IconPortfolio","Statement","IconStatement","Trade","settings","Settings","personal","PersonalDetails","financial","FinancialAssessment","account_password","AccountPassword","cashier_password","CashierPassword","exclusion","SelfExclusion","limits","Limits","history","LoginHistory","token","ApiToken","apps","AuthorizedApplications","getRoutesConfig","MenuDrawer","is_dark_mode","is_mobile","is_purchase_locked","toggleDarkMode","togglePurchaseLock","is_purchase_confirmed","togglePurchaseConfirmation","is_dark_mode_on","is_purchase_confirm_on","is_purchase_lock_on","AppContents","ProptTypes","Footer","is_settings_dialog_on","network_status","toggleSettingsDialog","common","is_language_dialog_on","Header","can_upgrade","is_acc_switcher_on","toggleAccountsDialog","is_accounts_switcher_on","ThemeWrapper","is_dark_theme","theme_wrapper_class","dark","light","Routes","objectOrObservableObject","LanguageSettings","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","is_chart_layout_default","is_chart_asset_info_visible","is_chart_countdown_visible","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","showLanguage","current_language","showLanguageDialog","hideLanguageDialog","RemainingTime","end_time","start_time","remaining_time","isRequired","server_time","ServerTime","gmt_time","isClientAllowedToVisit","enforceActions","initApp","init","root_store","RootStore","NetworkMonitor","app","getElementById","Fragment","DevTools","process","require","App","IconArrow","IconBack","IconClose","IconError","IconExclamation","IconEntrySpot","color","IconFlag","IconTick","circle_color","tick_color","IconMaximize","IconQuickPortfolio","IconSettings","IconLogout","IconBell","IconCashier","IconHamburger","IconTrade","IconTradeCategory","category","IconCategory","IconTradeType","IconType","IconLock","getContractTypeDisplay","ASIANU","ASIAND","CALL","CALLE","PUT","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYMISS","EXPIRYRANGE","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","DetailsContents","buy_id","details_expiry","details_info","longcode","DetailsGroup","DetailsHeader","header_config","title_purchased","purchased","title_result","icon_purchased","icon_result","oneOf","DigitDisplay","digit_info","digit_number","digit_class","is_win","last","is_last","digit","InfoBoxDigit","InfoBoxExpired","InfoBoxGeneral","contract_info","digits_info","is_ended","digits_array","sort","spot_time","count","tick_count","latest_digit","display_array","last_item","has_flag","has_percentage","sell_info","profit","profit_percentage","percentage_text","transaction_id","buy_price","date_expiry","indicative_price","is_started","onClickSell","SellButton","is_sell_requested","is_valid_to_sell","sell_message","validation_error","SellInfo","sell_price","ContractError","onClickClose","Contract","match","symbol","chart_config","updateChartType","updateGranularity","form_wrapper_class","transaction_ids","display_status","buy","onClickNewTrade","ContractSell","InfoBox","is_trade_page","removeError","is_digit","contract_type","box_class","Contents","error_message","removeSellError","CardList","data","ContractTypeCell","EmptyPortfolioMessage","IndicativeCell","status_class_name","PortfolioCard","details","payout","purchase","reference","getTableColumnsTemplate","is_tablet","totals","should_show_cards","ChartMarker","marker_config","marker_content_props","ContentComponent","marker_props","MarkerLine","line_style","MarkerSpot","align","spot_value","ControlWidgets","TopWidgets","is_title_enabled","onSymbolChange","Chart","chartControlsWidgets","topWidgets","barriers_array","chart_type","end_epoch","granularity","chart_id","wsSendRequest","wsForget","wsSubscribe","start_epoch","markers_array","marker","content_config","smart_chart","symbolChange","AmountCell","EmptyStatementMessage","has_selected_date","StatementCard","action","desc","refid","StatementCardList","transaction","handleScroll","renderGUI","Filter","date_from","date_to","handleDateChange","use_native_pickers","FullScreenDialog","checkVisibility","remove","scrollToElement","parent","viewport_offset","top","clientHeight","innerHeight","new_el_top","scrollTop","handleClick","tagName","scrollToTarget","currentTarget","MobileWidget","open","handleDialogClose","handleWidgetClick","ContractTypeDialog","ContractTypeItem","contracts","ContractTypeList","ContractTypeWidget","is_dialog_open","getStyles","container_classes","join","ErrorBalance","ErrorGeneral","ErrorLogin","MessageBox","purchase_info","error_code","PurchaseResult","PurchaseLock","ContractInfo","barrier_count","contract_title","proposal_info","icon_type","stake","returns","Amount","basis","basis_list","currencies_list","is_minimized","validation_errors","o","has_currency","amount_container_class","Barrier","barrier_1","barrier_2","expiry_list","now_date","min_date_duration","max_date_duration","min_date_expiry","min_day","max_day","start_date_time","Duration","contract_expiry_type","duration","duration_unit","duration_units_list","duration_min_max","expiry_date","expiry_type","moment_now","new_min_day","min","new_max_day","max","moment_expiry","is_same_day","date_time","moment_start_date_time","duration_unit_text","datepicker_footer","has_end_time","expiry","pop","endtime_container_class","last_digit_numbers","LastDigit","last_digit","StartDate","start_dates_list","Number","current_date_config","FormLayout","is_contract_visible","is_trade_enabled","ScreenLarge","ScreenSmall","contract_types_list","Purchase","is_purchase_enabled","onClickPurchase","onHoverPurchase","resetPurchase","trade_types","purchase_button","is_purchase_error","echo_req","onPurchase","requestProposal","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","position","zIndex","background","marginTop","display","overflowY","height","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","assign","entries","k","v","JSON","stringify","is_contract_mode","TradeParams","component_name","form_components","includes","isVisible","trade_store","renderCards","Menu","group","MenuItem","description","img_src","itemContent","MenuList","MobileDropdown","toggleOpen","all_items","Section","component_to_path","displayName","settings_data","section","displayname","all","url","SocketCache","switchAccount","sessionStorage","setItem","setLoginFlag","set","reload","BinarySocketGeneral","WS","logout","then","doLogout","response","clearAllAccounts","common_store","store","NetworkMonitorBase","is_online","is_network_online","client_store","onOpen","is_ready","Login","isLoginPages","isValidLoginid","subscribeWebsiteStatus","ResponseHandlers","websiteStatus","onMessage","handleError","msg_type","is_active_tab","getItem","removeItem","State","authorize","responseAuthorize","setBalance","subscribeBalance","getSettings","getAccountStatus","payoutCurrencies","mt5LoginList","setResidence","country","getSelfExclusion","BinarySocket","sendBuffered","get_settings","country_code","email","residence","landingCompany","wait","setError","is_available","website_status","site_status","availability","SubscriptionManager","subscriptions","forget_requested","subscription_id","subscribe","request_obj","fncCallback","should_forget_first","forget","sub_id","request","stream_id","subscribers","send","callback","dispatch","hasCallbackFunction","forgetStream","sub_info","match_values","sub_ids","forgets_list","hasValues","splice","indexOf","Promise","forgetAll","msg_types","types_to_forget","resolve","forget_all","values_obj","every","activeSymbols","active_symbols","proposal_id","price","contractsFor","contracts_for","get_account_status","get_self_exclusion","landing_company","mt5_login_list","oauthApps","oauth_apps","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","cb","subscribeProposal","req","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","getHeaderConfig","won","lost","createChartBarrier","SmartChartStore","removeBarriers","barrier","high_barrier","low_barrier","createBarriers","BARRIER_LINE_STYLES","SOLID","not_draggable","updateBarrierShade","createChartMarkers","ContractStore","marker_creators","marker_type","markers","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerEndTime","LINE_PURCHASE","createMarkerPurchaseTime","LINE_START","createMarkerStartTime","SPOT_ENTRY","createMarkerSpotEntry","SPOT_EXIT","createMarkerSpotExit","createMarkerConfig","purchase_time","date_start","entry_tick_time","is_sold_before_start","entry_tick","end_spot_time","end_spot","x","y","getDetailsInfo","entry_spot","sell_time","txt_start_time","txt_entry_spot","getDetailsExpiry","is_user_sold","isDigitContract","getDigitInfo","entry","createDigitInfo","current_spot_time","exit_time","exit_tick_time","is_after_expiry","current","current_spot","spot","isWin","win_checker","getChartConfig","start","end","calculateGranularity","hour_to_granularity_map","m","getDisplayStatus","isEnded","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","getFinalPrice","bid_price","getIndicativePrice","is_expired","is_settleable","isSoldBeforeStart","isStarted","is_forward_starting","isUserSold","isValidToSell","bound","setContractMode","updateProposal","forgetProposalOpenContract","removeMarkers","handleDigits","handleSell","proposal_response","sold_for","BaseStore","observable","computed","formatPortfolioPosition","portfolio_pos","parseFloat","PortfolioStore","pos","pos1","pos2","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","prev_indicative","new_indicative","display_name","unshift","findIndex","initializePortfolio","clearTable","server_epoch","portfolioHandler","transactionHandler","CONTRACT_SHADES","DEFAULT_SHADES","BARRIER_COLORS","GREEN","RED","DASHED","DOTTED","tick_chart_types","MARKER_X_POSITIONER","EPOCH","NONE","MARKER_Y_POSITIONER","VALUE","MARKER_CONTENT_TYPES","LINE","xPositioner","yPositioner","SPOT","isBarrierSupported","barriersToString","is_relative","barriers_list","barriersObjectToArray","barriers","ChartBarrierStore","onChartBarrierChange","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","should_display","updateBarriers","ChartMarkerStore","local_storage_properties","time","timePromise","main","config","assetInformation","countdown","lang","theme","main_barrier","formatStatementTransaction","moment_obj","transaction_time","date_str","time_str","balance_after","should_exclude_currency","action_type","isNaN","app_id","batch_size","StatementStore","has_loaded_all","statementHandler","formatted_transactions","transactions","fetchNextBatch","scrollHeight","left_to_scroll","clearDateFilter","onChangeContractTypeList","ContractType","getContractType","onChangeContractType","getContractValues","getCurrenciesAsync","default_currency","onChangeExpiry","obj_barriers","getBarriers","processPurchase","onChangeStartDate","obj_contract_start_type","getStartType","contract_start_type","obj_sessions","getSessions","obj_start_time","getStartTime","obj_duration_units_list","getDurationUnitsList","obj_duration_unit","getDurationUnit","obj_expiry_date","getExpiryDate","obj_expiry_time","getExpiryTime","obj_duration_min_max","getDurationMinMax","onChangeSymbolAsync","buildContractTypesConfig","getLocalizedBasis","multiplier","getContractTypesConfig","rise_fall","components","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","getContractCategoriesConfig","allowed_query_string_variables","non_proposal_query_string_variable","proposal_properties_alternative_names","barrier2","removable_proposal_properties","getValidationRules","condition","options","buildBarriersConfig","obj_barrier","field","setChartBarrier","available_contract_types","available_categories","contract_types","contract_categories","r","available","sub_cats","has_spot","start_type","durations","buildTradeTypesConfig","forward_starting_dates","contract_display","getArrayDefaultValue","arr_new_values","getComponents","obj_basis","getBasis","obj_trade_types","getTradeTypes","obj_start_dates","getStartDates","obj_start_type","obj_duration_units_min_max","l","ct","c_type","duration_units","arr_units","obj","current_start_date","option","getValidTime","compare_moment","buildMoment","moment_start","is_invalid","end_moment","isSameOrBefore","is_end_of_day","is_end_of_session","barrier_values","toString","arr_basis","localized_basis","cur","bas","getContractCategories","buildCurrenciesList","fiat","crypto","getDefaultCurrency","supported_currencies","values","b","c","getDurationMaps","t","order","s","to_second","d","buildDurationConfig","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","convertDurationUnit","duration_maps","u","from_unit","to_unit","duration_string","getExpiryType","duration_is_day","expiry_is_after_today","convertDurationLimit","floor","Currency","processTradeParams","new_state","snapshot","getSnapshot","extendOrReplace","getMethodsList","ContractTypeHelper","source","new_values","to_replace","getProposalInfo","ask_price","toFixed","display_value","createProposalRequests","requests","new_req","createProposalRequestForContract","current_req","proposal_requests","type_of_contract","obj_expiry","parseInt","getProposalParametersName","proper_param_name","toUpperCase","alternative_name","buildForwardStartingConfig","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","close","isBeforeDate","should_only_check_hour","now_moment","isSessionAvailable","isBetween","session","pickDefaultSymbol","symbol_info","submarket","Symbol","TradeStore","URLHelper","pruneQueryString","session_storage_properties","validation_rules","debouncedProposal","defineProperty","enumerable","writable","processNewValuesAsync","changeDurationValidationRules","query_string_values","updateQueryString","is_over","contract_data","pushPurchaseData","preventDefault","is_trade_component_mounted","setQueryParam","obj_new_values","is_changed_by_user","is_barrier_changed","is_query_string_applied","validateAllProperties","proper_proposal_params_for_query_string","onProposalResponse","query_params","param","duration_options","validateProperty","prepareTradeStore","ModulesStore","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","localStorage","constructor","local_storage_snapshot","parse","session_storage_snapshot","propertyName","messages","rules","addRule","property","change","newValue","validator","Validator","isPassed","setValidationErrorMessages","errors","freeze","ClientStore","getBasicUpgradeInfo","upgrade_info","can_open_multi","CommonStore","currentLanguage","SPECIAL_REACT_KEYS","MobxProvider","stores","baseStores","context","mobxStores","Provider","childContextTypes","connect_global_store","mapper","connect","StoreClass","observed","StoredComponent","createElement","wrappedDisplayName","UIStore","handleResize","screen_width","innerWidth","toMoment","epoch","setTime","convertToUnix","toGMTFormat","formatDate","daysFromTodayTo","diff","getDiffDuration","formatDuration","asDays","seconds","formatted_str","setStorageEvents","evt","is_logging_in","fillTemplate","template","open_tag_id","tag","tag_id","before","pair_code","isValidElement","arr","getAllowedLanguages","exclude_languages","language_list","getURL","getComponentProperties","getOwnPropertyNames","acc","prop","getPropFromStores","getBaseName","regex_string","basename","exec","query_string","search","URLSearchParams","url_object","param_object","delete","append","replaceState","seach","set_query_string","getQueryParams","validRequired","String","validEmail","validPassword","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","val","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","format_money","isMoreThanMax","getPreBuildDVRs","initPreBuildDVRs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","pre_build_dvrs","getPasswordLengthConfig","Errors","attribute","has","prototype","hasOwnProperty","call","error_count","rule","name1","name2","ruleObject","getRuleObject","is_valid","addFailure","check","is_rule_string","rule_object","barrier1","portfolio_drawer","purchase_confirm","chart","toolbar_position","chart_asset_info","GTMBase","check_new_release","checkNewRelease","persisted","getAppId","user_app_id","config_app_id","hostname","getSocketURL","server_url","is_production","is_real","server","module","exports","Loading","from","inx"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAgB,uBAAuB;AACvC;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;ACtJA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qE;;;;;;;;;;;;;;;;;;;;;ACxBA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,iBAAiB,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AAChC,QAAMC,WAAeC,sBAAOC,GAAP,CAAW,UAAX,EAAuBH,OAAvB,CAArB;AACA,QAAMI,aAAeF,s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","file":"binary.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/br_prevent_black_listed_companies_to_browser/js/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/javascript/app_2/index.js\",\"binary_common\",\"react_mobx\",\"smartcharts\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ja\";","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Client            from '_common/base/client_base';\nimport { localize }      from '_common/localize';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services';\nimport { switchAccount } from 'Services/Helpers/switch_account';\nimport { UpgradeButton } from './upgrade_button.jsx';\n\nconst getAccountInfo = (loginid) => {\n    const currency     = Client.get('currency', loginid);\n    const is_virtual   = Client.get('is_virtual', loginid);\n    const account_type = !is_virtual && currency ? currency : Client.getAccountTitle(loginid);\n\n    return {\n        loginid,\n        is_virtual,\n        icon : account_type.toLowerCase(), // TODO: display the icon\n        title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n    };\n};\n\nconst makeAccountsList = () => Client.getAllLoginids().map(loginid => (\n    loginid !== Client.get('loginid') &&\n    !Client.get('is_disabled', loginid) &&\n    Client.get('token', loginid) ?\n        getAccountInfo(loginid) :\n        undefined\n)).filter(account => account);\n\nclass AccountSwitcher extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            accounts_list: makeAccountsList(),\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    doSwitch(loginid) {\n        this.props.toggle();\n        switchAccount(loginid);\n    }\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    render() {\n        if (!Client.isLoggedIn()) return false;\n\n        return (\n            <div className='acc-switcher-list' ref={this.setWrapperRef}>\n                {(this.state.accounts_list.length > 0) &&\n                this.state.accounts_list.map((account) => (\n                    <React.Fragment key={account.loginid}>\n                        <div\n                            className={classNames('acc-switcher-account', account.icon)}\n                            onClick={() => this.doSwitch(account.loginid)}\n                        >\n                            <span className='acc-switcher-id'>{account.loginid}</span>\n                            <span className='acc-switcher-type'>{account.title}</span>\n                        </div>\n                    </React.Fragment>\n                ))}\n                {this.props.is_upgrade_enabled &&\n                <div className='acc-button'>\n                    <UpgradeButton onClick={this.props.onClickUpgrade} />\n                </div>\n                }\n                <div className='acc-logout' onClick={requestLogout}>\n                    <span className='acc-logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    is_upgrade_enabled: PropTypes.bool,\n    is_visible        : PropTypes.bool,\n    onClickUpgrade    : PropTypes.func,\n    toggle            : PropTypes.func,\n};\n\nexport { AccountSwitcher };\n","export * from './account_switcher.jsx';\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\nimport CalendarPanel  from './calendar_panel.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date } = props;\n        const current_date = moment.utc(start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: '',           // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    // navigates to next or previous's month/year/decade/century\n    navigators = {\n        nextMonth      : () => { this.navigateTo(1,   'months', true); },\n        previousMonth  : () => { this.navigateTo(1,   'months', false); },\n        nextYear       : () => { this.navigateTo(1,   'years',  true); },\n        previousYear   : () => { this.navigateTo(1,   'years',  false); },\n        nextDecade     : () => { this.navigateTo(10,  'years',  true); },\n        previousDecade : () => { this.navigateTo(10,  'years',  false); },\n        nextCentury    : () => { this.navigateTo(100, 'years',  true); },\n        previousCentury: () => { this.navigateTo(100, 'years',  false); },\n    };\n\n    // selects a day, a month, a year, or a decade\n    panelSelectors = {\n        date  : (e, is_disabled) => { this.updateSelectedDate(e, is_disabled); },\n        month : (e) => { this.updateSelected(e, 'month'); },\n        year  : (e) => { this.updateSelected(e, 'year'); },\n        decade: (e) => { this.updateSelected(e, 'decade'); },\n    };\n\n    // sets Calendar active view\n    calendarViews = {\n        date  : () => { this.setState({ calendar_view: 'date'   }); },\n        month : () => { this.setState({ calendar_view: 'month'  }); },\n        year  : () => { this.setState({ calendar_view: 'year'   }); },\n        decade: () => { this.setState({ calendar_view: 'decade' }); },\n    };\n\n    navigateTo = (value, unit, is_add) => {\n        const { date_format, max_date, min_date } = this.props;\n\n        let new_date = moment.utc(this.state.calendar_date, date_format)[is_add ? 'add' : 'subtract'](value, unit).format(date_format);\n\n        if (unit === 'months' && this.isPeriodDisabled(new_date, 'month')) return;\n\n        if (unit === 'years'  && this.isPeriodDisabled(new_date, 'years')) {\n            new_date = is_add ? max_date : min_date;\n        }\n\n        this.setState({ calendar_date: moment.utc(new_date, date_format).format(date_format) }); // formatted date\n    };\n\n    updateSelectedDate = (e, is_disabled) => {\n        if (is_disabled) {\n            return;\n        }\n\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = moment.utc(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(moment.utc(min_date));\n        const is_after    = moment_date.isAfter(moment.utc(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = moment.utc(this.state.calendar_date, this.props.date_format)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = moment.utc(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = moment().utc().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = moment.utc(date).startOf(unit);\n        const end_of_period   = moment.utc(date).endOf(unit);\n        return end_of_period.isBefore(moment.utc(min_date))\n            || start_of_period.isAfter(moment.utc(max_date));\n    };\n\n    render() {\n        const { children, date_format, footer, has_today_btn, id, max_date, min_date, start_date } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div id={id} className='calendar' value={selected_date}>\n                { children }\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    onClick={this.navigators}\n                    onSelect={this.calendarViews}\n                    calendar_view={calendar_view}\n                />\n                <CalendarPanel\n                    calendar_date={calendar_date}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    max_date={max_date}\n                    min_date={min_date}\n                    start_date={start_date}\n                    onClick={this.panelSelectors}\n                    selected_date={selected_date}\n                    calendar_view={calendar_view}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    onClick={this.setToday}\n                    has_today_btn={has_today_btn}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : moment(0).utc().format('YYYY-MM-DD'),              // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : moment().utc().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    children       : PropTypes.object,\n    date_format    : PropTypes.string,\n    footer         : PropTypes.string,\n    has_today_btn  : PropTypes.bool,\n    id             : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    max_date       : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onSelect  : PropTypes.func,\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Calendar;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nexport default function CalendarButton({ children, className, is_hidden, label, onClick }) {\n    return (\n        <React.Fragment>\n            { !is_hidden &&\n                <span\n                    type='button'\n                    className={className}\n                    onClick={onClick}\n                >\n                    {label}\n                    {children}\n                </span>\n            }\n        </React.Fragment>\n    );\n}\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarFooter({ footer, has_today_btn, onClick }) {\n    return (\n        <div className='calendar-footer'>\n            { footer && <span className='calendar-footer-extra'>{footer}</span> }\n            { has_today_btn &&\n                <CalendarButton className='calendar-footer-btn'>\n                    <a role='button' onClick={onClick}>{localize('Today')}</a>\n                </CalendarButton>\n            }\n        </div>\n    );\n}\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n","import classNames     from 'classnames';\nimport moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarHeader({ calendar_date, isPeriodDisabled, onClick, onSelect, calendar_view }) {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = moment.utc(calendar_date);\n\n    return (\n        <div className='calendar-header'>\n            <CalendarButton\n                className={classNames('calendar-prev-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    (is_date_view || is_month_view) && onClick.previousYear())\n                    || (is_year_view   && onClick.previousDecade())\n                    || (is_decade_view && onClick.previousCentury()\n                    )\n                }\n            />\n            <CalendarButton\n                className={classNames('calendar-prev-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.previousMonth}\n            />\n\n            <div className='calendar-select'>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar-select-month-btn'\n                        is_hidden={!is_date_view}\n                        label={moment_date.format('MMM')}\n                        onClick={onSelect.month}\n                    />\n                }\n                <CalendarButton\n                    className='calendar-select-year-btn'\n                    onClick={() => ((is_date_view || is_month_view) ? onSelect.year() : onSelect.decade())}\n                >\n                    { (is_date_view || is_month_view) && moment_date.year() }\n                    { is_year_view   && `${moment_date.clone().subtract(1, 'years').year()}-${moment_date.clone().add(10, 'years').year()}`  }\n                    { is_decade_view && `${moment_date.clone().subtract(10, 'years').year()}-${moment_date.clone().add(109, 'years').year()}` }\n                </CalendarButton>\n            </div>\n\n            <CalendarButton\n                className={classNames('calendar-next-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.nextMonth}\n            />\n            <CalendarButton\n                className={classNames('calendar-next-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    ((is_date_view || is_month_view) && onClick.nextYear())\n                    || (is_year_view   && onClick.nextDecade())\n                    || (is_decade_view && onClick.nextCentury())\n                )}\n            />\n        </div>\n    );\n}\n\nCalendarHeader.propTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    onClick         : PropTypes.object,\n    onSelect        : PropTypes.object,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nexport default function CalendarPanel(props) {\n    const calendar_panel = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <div className='calendar-panel'>\n            { calendar_panel[props.calendar_view] }\n        </div>\n    );\n}\n\nCalendarPanel.propTypes = {\n    calendar_view: PropTypes.string,\n};\n","export default from './calendar.jsx';\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { padLeft }        from '_common/string_util';\nimport CalendarPanelTypes from './types';\n\nconst getDays = ({ calendar_date, date_format, max_date, min_date, start_date, onClick, selected_date }) => {\n    const dates = [];\n    const days  = [];\n    const moment_today       = moment().utc().startOf('day');\n    const moment_cur_date    = moment.utc(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const first_day          = moment_month_start.day();\n    const last_day           = moment_month_end.day();\n    const moment_min_date    = moment.utc(min_date);\n    const moment_max_date    = moment.utc(max_date);\n    const moment_selected    = moment.utc(selected_date);\n\n    for (let i = first_day; i > 0; i--) {\n        dates.push(moment_month_start.clone().subtract(i, 'day').format(date_format));\n    }\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    for (let i = 1; i <= 6 - last_day; i++) {\n        dates.push(moment_month_end.clone().add(i, 'day').format(date_format));\n    }\n\n    const moment_start_date = moment.unix(start_date).utc().startOf('day');\n    dates.map((date) => {\n        const moment_date = moment.utc(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n        const is_disabled = moment_date.isBefore(moment_min_date) || moment_date.isAfter(moment_max_date) ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && (moment_date.isBefore(moment_start_date) || moment_date.isAfter(moment_start_date.clone().add(1, 'day'))));\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar-date', {\n                    active  : is_active && !is_disabled,\n                    today   : is_today,\n                    disabled: is_disabled,\n                })}\n                onClick={(e) => { onClick.date(e, is_disabled); }}\n                data-date={date}\n            >\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nconst week_headers = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar-date-panel'>\n            {week_headers.map((item, idx) => (<span key={idx} className='calendar-date-header'>{item}</span>))}\n            {days}\n        </div>\n    );\n};\n\nCalendarDays.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarDecades = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n\n    const decades = [];\n    let min_year  = moment_date.year() - 10;\n    for (let i = 0; i < 12; i++) {\n        const max_year = min_year + 9;\n        const range    = `${min_year}-${max_year}`;\n        decades.push(range);\n        min_year = max_year + 1;\n    }\n\n    return (\n        <div className='calendar-decade-panel'>\n            {decades.map((range, idx) => {\n                const [start_year, end_year] = range.split('-');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar-decade', {\n                            disabled: isPeriodDisabled(moment_date.year(start_year), 'year') && isPeriodDisabled(moment_date.year(end_year), 'year'),\n                            active  : start_year === selected_year,\n                        })}\n                        onClick={onClick.decade}\n                        data-decade={range}\n                    >\n                        {range}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { localize }       from '_common/localize';\nimport CalendarPanelTypes from './types';\n\nconst getMonthHeaders = () => ({\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n});\n\nexport const CalendarMonths = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const moment_date    = moment.utc(calendar_date);\n    const selected_month = moment.utc(selected_date).month();\n    const month_headers  = getMonthHeaders();\n\n    return (\n        <div className='calendar-month-panel'>\n            {Object.keys(month_headers).map((month, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-month', {\n                        active  : idx === selected_month,\n                        disabled: isPeriodDisabled(moment_date.month(month), 'month'),\n                    })}\n                    onClick={onClick.month}\n                    data-month={idx}\n                >\n                    {month_headers[month]}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarYears = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n    const current_year  = moment_date.year();\n    const years         = [];\n    for (let year = current_year - 1; year < current_year + 11; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar-year-panel'>\n            {years.map((year, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-year', {\n                        disabled: isPeriodDisabled(moment_date.year(year), 'year'),\n                        active  : year === selected_year,\n                    })}\n                    onClick={onClick.year}\n                    data-year={year}\n                >\n                    {year}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CalendarPanelTypes };\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import PropTypes from 'prop-types';\n\nexport const CalendarPanelTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    date_format     : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    max_date        : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onClick      : PropTypes.object,\n    selected_date: PropTypes.string,\n};\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport TableRow                       from './table_row.jsx';\n\n/* TODO:\n      1. implement sorting by column (ASC/DESC)\n      2. implement filtering per column\n*/\n\nclass DataTable extends React.PureComponent {\n    componentDidUpdate() {\n        this.alignHeader();\n    }\n\n    alignHeader() {\n        // scrollbar inside table-body can push content (depending on the browser and if mouse is plugged in)\n        if (!this.props.data_source.length) return;\n        const first_body_row   = this.el_table_body.firstChild;\n        const scrollbar_offset = this.el_table_head.offsetWidth - first_body_row.offsetWidth;\n        this.el_table_head.style.paddingRight = `${scrollbar_offset}px`;\n    }\n\n    render() {\n        const {\n            children,\n            columns,\n            footer,\n            getRowLink,\n            onScroll,\n        } = this.props;\n\n        return (\n            <div className='table'>\n                <div className='table__head' ref={el => { this.el_table_head = el; }}>\n                    <TableRow columns={columns} is_header />\n                </div>\n\n                <div\n                    className='table__body'\n                    onScroll={onScroll}\n                    ref={el => { this.el_table_body = el; }}\n                >\n                    {this.props.data_source.map((row_obj, id) =>\n                        <TableRow\n                            row_obj={row_obj}\n                            columns={columns}\n                            key={id}\n                            to={getRowLink && getRowLink(row_obj)}\n                        />\n                    )}\n                    {children}\n                </div>\n\n                {this.props.footer &&\n                    <div className='table__foot'>\n                        <TableRow row_obj={footer} columns={columns} is_footer />\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nDataTable.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.arrayOf(PropTypes.node),\n    ]),\n    columns    : PropTypes.array,\n    data_source: MobxPropTypes.arrayOrObservableArray,\n    footer     : PropTypes.object,\n    getRowLink : PropTypes.func,\n    onScroll   : PropTypes.func,\n};\n\nexport default DataTable;\n","export default from './data_table.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst TableCell = ({ col_index, children }) => (\n    <div className={classNames('table__cell', col_index)}>\n        {children}\n    </div>\n);\n\nTableCell.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n    ]),\n    col_index: PropTypes.string,\n};\n\nexport default TableCell;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { NavLink } from 'react-router-dom';\nimport TableCell   from './table_cell.jsx';\n\nconst TableRow = ({\n    to,\n    columns,\n    is_footer,\n    is_header,\n    row_obj = {},\n}) => {\n    const cells = columns.map(({ col_index, renderCellContent, title }) => {\n        let cell_content = title;\n        if (!is_header) {\n            const cell_value = row_obj[col_index] || '';\n            cell_content = renderCellContent\n                ? renderCellContent({ cell_value, col_index, row_obj, is_footer })\n                : cell_value;\n        }\n\n        return (\n            <TableCell col_index={col_index} key={col_index}>\n                {cell_content}\n            </TableCell>\n        );\n    });\n\n    return (\n        to ?\n            <NavLink className='table__row' to={to}>\n                {cells}\n            </NavLink>\n            :\n            <div className='table__row'>\n                {cells}\n            </div>\n    );\n};\n\nTableRow.propTypes = {\n    columns  : PropTypes.array,\n    is_footer: PropTypes.bool,\n    is_header: PropTypes.bool,\n    row_obj  : PropTypes.object,\n    to       : PropTypes.string,\n};\n\nexport default TableRow;\n","import React                from 'react';\nimport PropTypes            from 'prop-types';\nimport { getAccountOfType } from '_common/base/client_base';\nimport { localize }         from '_common/localize';\nimport URL                  from '_common/url';\nimport FullPageModal        from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport { switchAccount }    from 'Services/Helpers/switch_account';\n\nconst onConfirm = () => {\n    switchAccount(getAccountOfType('virtual').loginid);\n};\n\nconst onCancel  = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        body={localize('Sorry, Only virtual accounts can access this feature at the moment.')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n        visible={visible}\n    />\n);\n\nDenialOfServiceModal.propTypes = {\n    visible: PropTypes.bool,\n};\nexport default DenialOfServiceModal;\n","export default from './denial_of_service.jsx';\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.alignment === 'left') {\n            this.setState({ is_this_drawer_on: nextProps.is_main_drawer_on });\n        } else if (this.props.alignment === 'right'){\n            this.setState({ is_this_drawer_on: nextProps.is_notifications_drawer_on });\n        }\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <ToggleButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\n\nconst ErrorComponent = ({ type, message }) => (\n    <div className='error-container'>\n        <IconError type={type} />\n        <p>{message || localize('Sorry, an error occured while processing your request.')}</p>\n    </div>\n);\n\nErrorComponent.propTypes = {\n    message: PropTypes.string,\n    type   : PropTypes.string,\n};\n\nexport default ErrorComponent;\n","export default from './error_component.jsx';\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    body,\n    cancel_button_text,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    visible,\n    title,\n}) => {\n    if (visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{body}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    body               : PropTypes.string,\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n    visible            : PropTypes.bool,\n};\n\nexport default FullPageModal;\n","export default from './inkbar_div.jsx';\nexport *       from './inkbar.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst InkBar = ({ left, width }) => {\n    const inkbar_style = {\n        left,\n        width,\n    };\n\n    return (\n        <span style={inkbar_style} className='inkbar' />\n    );\n};\n\nInkBar.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { InkBar };\n","import classnames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { InkBar } from './inkbar.jsx';\n\nclass InkBarDiv extends React.Component {\n    constructor(props) {\n        super(props);\n        window.addEventListener('resize', this.updateInkbarPosition);\n        this.state = {\n            left : 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.node) return;\n        this.updateInkbarPosition(this.node.querySelector('a[class=\"active\"]'));\n    }\n\n    componentDidUpdate() {\n        const active_el = this.node.querySelector('a[class=\"active\"]');\n        if (active_el) {\n            this.updateInkbarPosition(active_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.clearInkBar(); // clear InkBar when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        window.removeEventListener('resize', this.updateInkbarPosition);\n        this.clearInkBar();\n    }\n\n    onClick = (e) => {\n        if (!e.target) return;\n        this.updateInkbarPosition(e.target.closest('a'));\n    };\n\n    clearInkBar = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateInkbarPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('has-inkbar', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: this.onClick,\n                        })\n                    ))\n                }\n                <InkBar left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nInkBarDiv.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default InkBarDiv;\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    }, popconfirm_element)\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","export default from './portfolio_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { localize }                   from '_common/localize';\nimport { IconClose }                  from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty_portfolio_message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PortfolioDrawerCard            from './portfolio_drawer_card.jsx';\n\nclass PortfolioDrawer extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_portfolio_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PortfolioDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('portfolio-drawer', { 'portfolio-drawer--open': is_portfolio_drawer_on })}>\n                <div className='portfolio-drawer__header'>\n                    <span className='portfolio-drawer__icon-main ic-portfolio' />\n                    <span className='portfolio-drawer__title'>{localize('Portfolio Quick Menu')}</span>\n                    <div\n                        className='portfolio-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconClose />\n                    </div>\n                </div>\n                <div className='portfolio-drawer__body'>\n                    {body_content}\n                </div>\n            </div>\n        );\n    }\n}\n\nPortfolioDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_portfolio_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n        toggleDrawer          : ui.togglePortfolioDrawer,\n    })\n)(PortfolioDrawer);\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PortfolioDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink className='portfolio-drawer-card' to={getContractPath(id)}>\n        <React.Fragment>\n            <div className='portfolio-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`portfolio-drawer-card__indicative portfolio-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='portfolio-drawer-card__symbol'>{underlying}</span>\n            <span className='portfolio-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPortfolioDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PortfolioDrawerCard;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <ToggleButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={`symbols ${currency.toLowerCase()}`} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ToggleButton = ({ style, toggled }) => {\n    const toggle_style = style || 'toggle-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nToggleButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default ToggleButton;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    message,\n    alignment,\n    children,\n    icon, // only question or info accepted\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className='tooltip' data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={icon_class} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.node,\n    icon     : PropTypes.string,\n    message  : PropTypes.string,\n};\n\nexport default Tooltip;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className }) => {\n    const loading_class = classNames('loading', className);\n    return (\n        <div className='block-ui'>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default UILoader;\n","import classNames      from 'classnames';\nimport moment          from 'moment';\nimport React           from 'react';\nimport { IconArrow }   from 'Assets/Common';\nimport {\n    formatDate,\n    daysFromTodayTo }  from 'Utils/Date';\nimport DatePickerInput from './date_picker_input.jsx';\nimport Calendar        from '../../Elements/Calendar';\n\nclass DatePicker extends React.PureComponent {\n    state = {\n        value                : '',\n        is_datepicker_visible: false,\n        is_close_btn_visible : false,\n    };\n\n    componentWillReceiveProps({ value, mode }) {\n        if (value === this.state.value) return;\n        this.updateDatePickerValue(value, mode);\n    }\n\n    componentWillMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState({ is_datepicker_visible: !this.state.is_datepicker_visible });\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (!('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_close_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_close_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!moment.utc(value).isValid) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value), 'duration');\n        } else {\n            this.updateDatePickerValue(value);\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value, this.props.mode);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: '' }, this.updateStore);\n        this.calendar.resetCalendar();\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value, mode) => {\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const { date_format, start_date } = this.props;\n        const new_date = (mode === 'duration') ? moment.utc().add(value, 'days').format(date_format) : value;\n        if (this.calendar && (moment.utc(new_date, date_format).isValid() || !new_date)) {\n            if (!new_date) {\n                const current_date = moment.utc(start_date).format(date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='datepicker-display'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker-native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker-native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                <div\n                    className='datepicker-display-wrapper'\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}\n                >\n                    <DatePickerInput\n                        class_name='datepicker-display'\n                        mode={this.props.mode}\n                        name={this.props.name}\n                        placeholder={this.props.placeholder}\n                        onClick={this.handleVisibility}\n                        is_read_only={true}\n                        value={this.state.value}\n                    />\n                    <span\n                        className={classNames('picker-calendar-icon', {\n                            show: !this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.handleVisibility}\n                    />\n                    <span\n                        className={classNames('close-circle-icon', {\n                            show: this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.clearDatePickerInput}\n                    />\n                </div>\n                <div\n                    className={classNames('datepicker-calendar', {\n                        show: this.state.is_datepicker_visible,\n                    })}\n                >\n                    <Calendar\n                        ref={node => { this.calendar = node; }}\n                        onSelect={this.onSelectCalendar}\n                        {...this.props}\n                    >\n                        <DatePickerInput\n                            class_name='calendar-input'\n                            mode={this.props.mode}\n                            name={this.props.name}\n                            onChange={this.onChangeInput}\n                            placeholder={this.props.placeholder}\n                            is_read_only={'is_read_only' in this.props ? this.props.is_read_only : false}\n                            value={this.state.value}\n                        />\n                    </Calendar>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...DatePickerInput.propTypes,\n    ...Calendar.propTypes,\n};\n\nexport default DatePicker;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nexport default function DatePickerInput(props) {\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            className={props.class_name}\n            readOnly={props.is_read_only}\n            placeholder={props.placeholder\n                || (props.mode === 'duration' ? localize('Select a duration') : localize('Select date'))}\n            onChange={props.onChange}\n            onClick={props.onClick}\n            value={props.value}\n        />\n    );\n}\n\nDatePickerInput.propTypes = {\n    class_name  : PropTypes.string,\n    id          : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    is_read_only: PropTypes.bool,\n    mode        : PropTypes.string,\n    name        : PropTypes.string,\n    onChange    : PropTypes.func,\n    onClick     : PropTypes.func,\n    placeholder : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number, // duration\n        PropTypes.string, // date\n    ]),\n};\n","export default from './date_picker.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = `btn${has_effect ? ' effect' : ''} ${className}`;\n    const button = (\n        <button id={id} className={classes} onClick={onClick || undefined} disabled={is_disabled}>\n            <span>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.object,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconArrow }     from 'Assets/Common';\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleVisibility   = this.handleVisibility.bind(this);\n        this.handleSelect       = this.handleSelect.bind(this);\n        this.setWrapperRef      = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.state = {\n            is_list_visible: false,\n        };\n    }\n\n    getDisplayText = (list, value) => {\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === (typeof item.value === 'number' ? +value : value)) || {}).text;\n        let text = '';\n        if (isArrayLike(list)) {\n            text = findInArray(list);\n        } else {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect(item) {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef(node) {\n        this.wrapper_ref = node;\n    }\n\n    scrollToggle(state) {\n        this.is_open = state;\n        // Used to disable y-scroll on body - disabled in this component for now\n        // document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n            this.scrollToggle(this.state.is_list_visible);\n        }\n    }\n\n    handleVisibility() {\n        this.setState({ is_list_visible: !this.state.is_list_visible });\n        this.scrollToggle(!this.state.is_list_visible);\n    }\n\n    render() {\n        // TODO: Fix list not being populated in native picker dropdown before re-enabling\n        // if (this.props.is_nativepicker) {\n        //     return (\n        //         <NativeSelect\n        //             name={this.props.name}\n        //             value={this.props.value}\n        //             list={this.props.list}\n        //             onChange={this.props.onChange}\n        //         />\n        //     );\n        // }\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={`dropdown-container ${this.props.className ? this.props.className : ''} ${this.state.is_list_visible ? 'show' : ''}`}\n            >\n                <div\n                    className={`dropdown-display ${this.state.is_list_visible ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                    onBlur={this.handleVisibility}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                <IconArrow className='select-arrow' />\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames='dropdown-list'\n                    unmountOnExit\n                >\n                    <div className='dropdown-list'>\n                        <div className='list-container'>\n                            {isArrayLike(this.props.list) ?\n                                <Items\n                                    items={this.props.list}\n                                    name={this.props.name}\n                                    value={this.props.value}\n                                    handleSelect={this.handleSelect}\n                                /> :\n                                Object.keys(this.props.list).map(key => (\n                                    <React.Fragment key={key}>\n                                        <div className='list-label'><span>{key}</span></div>\n                                        <Items\n                                            items={this.props.list[key]}\n                                            name={this.props.name}\n                                            value={this.props.value}\n                                            handleSelect={this.handleSelect}\n                                        />\n                                    </React.Fragment>\n                                ))\n                            }\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={`list-item ${ value === item.value ? 'selected' : ''}`}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nconst NativeSelect = ({\n    name,\n    value,\n    list,\n    onChange,\n}) => (\n    <div className='select-wrapper'>\n        <select name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\n// ToDo: Refactor Drop-down.\n// It's now too risky to refactor Dropdown for 'list' and 'value' prop types.\nDropdown.propTypes = {\n    className      : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    list           : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    type    : PropTypes.string,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\n// ToDo: Refactor NativeSelect\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Tooltip    from '../Elements/tooltip.jsx';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    icon,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n}) => {\n    const field_left_class = classNames('field-info left', { icon }, icon);\n\n    return (\n        <fieldset className={className}  onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className='fieldset-header'>\n                    <span className={field_left_class}>{header}</span>\n                </div>\n            }\n            {!!tooltip &&\n                <span className='field-info right'>\n                    <Tooltip\n                        alignment='left'\n                        icon='info'\n                        message={tooltip || 'Message goes here.'}\n                    />\n                </span>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    icon        : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    tooltip     : PropTypes.string,\n};\n\nexport default Fieldset;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    className,\n    error_messages,\n    fractional_digits,\n    helper,\n    is_disabled,\n    is_float,\n    is_signed = false,\n    label,\n    max_length,\n    name,\n    onChange,\n    placeholder,\n    prefix,\n    required,\n    type,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n\n    const changeValue = (e) => {\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '';\n            const signed_regex = is_signed ? '[\\\\+-]?' : '';\n\n            const is_number = new RegExp(`^${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}(?<=\\\\d)(?<!-0)$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`^${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`^${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n            \n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`^${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const input =\n        <input\n            className={classNames({ error: has_error })}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-tip\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onChange={changeValue}\n            placeholder={placeholder || undefined}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={value}\n        />;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <i><span className={`symbols ${prefix.toLowerCase()}`} /></i>\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                { input }\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    className        : PropTypes.string,\n    error_messages   : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits: PropTypes.number,\n    helper           : PropTypes.bool,\n    is_disabled      : PropTypes.string,\n    is_float         : PropTypes.bool,\n    is_signed        : PropTypes.bool,\n    label            : PropTypes.string,\n    max_length       : PropTypes.number,\n    name             : PropTypes.string,\n    onChange         : PropTypes.func,\n    placeholder      : PropTypes.string,\n    prefix           : PropTypes.string,\n    required         : PropTypes.bool,\n    type             : PropTypes.string,\n    value            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import {\n    observer,\n    PropTypes as MobxPropTypes }      from 'mobx-react';\nimport moment                         from 'moment';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { localize }                   from '_common/localize';\nimport { isSessionAvailable }         from 'Stores/Modules/Trading/Helpers/start_date';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = moment(start_date * 1000 || undefined).utc();\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <input\n                                    ref={this.saveRef}\n                                    type='text'\n                                    readOnly\n                                    id={`${prefix_class}-input`}\n                                    className={`${prefix_class}-input ${this.state.is_open ? 'active' : ''}`}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    toggle     : PropTypes.func,\n    value      : PropTypes.string,\n    value_split: PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_portfolio.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentWillMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { IconQuickPortfolio } from 'Assets/Footer';\n\nconst TogglePortfolio = ({\n    is_portfolio_drawer_on,\n    togglePortfolioDrawer,\n}) => {\n    const toggle_portfolio_class = classNames('ic-portfolio', {\n        'active': is_portfolio_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_portfolio_class}\n            onClick={togglePortfolioDrawer}\n        >\n            <IconQuickPortfolio className='footer-icon' />\n        </a>\n    );\n};\n\nTogglePortfolio.propTypes = {\n    is_portfolio_drawer_on: PropTypes.bool,\n    togglePortfolioDrawer : PropTypes.func,\n};\n\nexport { TogglePortfolio };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { IconArrow }       from 'Assets/Common';\nimport Client              from '_common/base/client_base';\nimport { localize }        from '_common/localize';\nimport { AccountSwitcher } from '../../Elements/AccountSwitcher';\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    onClickUpgrade,\n    toggleDialog,\n}) => {\n    const is_demo       = (Client.get('is_virtual', loginid));\n    const account_title = Client.getAccountTitle(loginid);\n    const account_type  = !(is_demo) && currency ? account_title : localize('Demo');\n\n    return (\n        <div className='acc-balance'>\n            <div className='acc-switcher-container'>\n                <div className={classNames('acc-info', { 'show': is_dialog_on })} onClick={toggleDialog}>\n                    <p className='acc-balance-type'>{localize('[_1] Account', [(account_type || '')])}</p>\n                    <p className='acc-balance-id'>{loginid}</p>\n                    <IconArrow className='select-arrow' />\n                </div>\n                <CSSTransition\n                    in={is_dialog_on}\n                    timeout={400}\n                    classNames='acc-switcher-wrapper'\n                    unmountOnExit\n                >\n                    <div className='acc-switcher-wrapper'>\n                        <AccountSwitcher\n                            is_visible={is_dialog_on}\n                            toggle={toggleDialog}\n                            is_upgrade_enabled={is_upgrade_enabled}\n                            onClickUpgrade={onClickUpgrade}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n            { typeof balance !== 'undefined' &&\n                <p className='acc-balance-amount'>\n                    <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                    {balance}\n                </p>\n            }\n        </div>\n    );\n};\n\nAccountInfo.propTypes = {\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_info.jsx';\nexport * from './login_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Url            from '_common/url';\nimport InkBarDiv      from '../../Elements/InkBar';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <img className='logo-img' src={Url.urlForStatic('images/app_2/header/symbol.svg')} alt='Binary.com' />\n        </div>\n        { !!items.length &&\n            <InkBarDiv className='menu-links'>\n                {items.map((item, idx) => (\n                    <BinaryLink key={idx} to={item.link_to}>\n                        <span title={item.text}>{item.icon}{item.text}</span>\n                    </BinaryLink>\n                ))}\n            </InkBarDiv>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import React              from 'react';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\nimport getRoutesConfig    from '../../Constants/routes_config';\n\n\nconst BinaryRoutes = () => getRoutesConfig().map((route, idx) => (\n    <RouteWithSubRoutes key={idx} {...route} />\n));\n\nexport default BinaryRoutes;\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport Client              from '_common/base/client_base';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !Client.isLoggedIn()) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\n\nexport default RouteWithSubRoutes;\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconPortfolio,\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        icon   : <IconPortfolio className='ic-header__portfolio' />,\n        text   : localize('Portfolio'),\n        link_to: routes.portfolio,\n    },\n    {\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Statement'),\n        link_to: routes.statement,\n    },\n    // { icon: <IconCashier />,   text: localize('Cashier') },\n];\n\nexport default header_links;\n","import { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\nimport ContractDetails from 'Modules/Contract';\nimport Portfolio       from 'Modules/Portfolio';\nimport Settings        from 'Modules/settings/settings.jsx';\nimport Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\n// Settings Routes\nimport AccountPassword        from 'Modules/settings/sections/account_password.jsx';\nimport ApiToken               from 'Modules/settings/sections/api_token.jsx';\nimport AuthorizedApplications from 'Modules/settings/sections/authorized_applications.jsx';\nimport CashierPassword        from 'Modules/settings/sections/cashier_password.jsx';\nimport FinancialAssessment    from 'Modules/settings/sections/financial_assessment.jsx';\nimport Limits                 from 'Modules/settings/sections/limits.jsx';\nimport LoginHistory           from 'Modules/settings/sections/login_history.jsx';\nimport PersonalDetails        from 'Modules/settings/sections/personal_details.jsx';\nimport SelfExclusion          from 'Modules/settings/sections/self_exclusion.jsx';\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n]);\n\nlet routes_config;\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Client            from '_common/base/client_base';\nimport { localize }      from '_common/localize';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\nimport {\n    DrawerItem,\n    DrawerToggle }       from '../../Components/Elements/Drawer';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_mobile,\n    is_portfolio_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePortfolioDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            { is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        { !!(Client.isLoggedIn() && is_mobile) &&\n            <div className='drawer-footer'>\n                <DrawerItem\n                    icon={<IconLogout className='drawer-icon' />}\n                    text={localize('Logout')}\n                    custom_action={() => {\n                        if (is_portfolio_drawer_on) {\n                            togglePortfolioDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                        }\n                        requestLogout();\n                    }}\n                />\n            </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePortfolioDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(MenuDrawer);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({ children, is_portfolio_drawer_on }) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-portfolio-drawer': is_portfolio_drawer_on,\n        })}\n    >\n        {children}\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_portfolio_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePortfolio,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_logged_in,\n    is_portfolio_drawer_on,\n    is_language_dialog_visible,\n    is_settings_dialog_on,\n    network_status,\n    toggleSettingsDialog,\n    togglePortfolioDrawer,\n}) => (\n    <React.Fragment>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            {\n                is_logged_in &&\n                <TogglePortfolio\n                    is_portfolio_drawer_on={is_portfolio_drawer_on}\n                    togglePortfolioDrawer={togglePortfolioDrawer}\n                />\n            }\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_settings_visible={is_settings_dialog_on}\n                is_language_visible={is_language_dialog_visible}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePortfolioDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        network_status            : common.network_status,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { withRouter }           from 'react-router';\nimport { formatMoney }          from '_common/base/currency_base';\nimport { connect }              from 'Stores/connect';\nimport {\n    AccountInfo,\n    LoginButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    ToggleNotificationsDrawer } from '../../Components/Layout/Header';\nimport header_links             from '../../Constants/header_links';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    currency,\n    loginid,\n    is_acc_switcher_on,\n    is_logged_in,\n    is_mobile,\n    onClickUpgrade,\n    toggleAccountsDialog,\n}) => (\n    <header className='header'>\n        <div className='menu-items'>\n            <div className='menu-left'>\n                {is_mobile && <ToggleMenuDrawer />}\n                <MenuLinks items={header_links} />\n            </div>\n            <div className='menu-right'>\n                <div className='acc-balance-container'>\n                    { is_logged_in ?\n                        <React.Fragment>\n                            <AccountInfo\n                                balance={formatMoney(currency, balance, true)}\n                                is_upgrade_enabled={can_upgrade}\n                                onClickUpgrade={onClickUpgrade}\n                                currency={currency}\n                                loginid={loginid}\n                                is_dialog_on={is_acc_switcher_on}\n                                toggleDialog={toggleAccountsDialog}\n                            />\n                        </React.Fragment>\n                        :\n                        <LoginButton />\n                    }\n                </div>\n            </div>\n            <ToggleNotificationsDrawer />\n        </div>\n    </header>\n);\n\nHeader.propTypes = {\n    balance             : PropTypes.string,\n    can_upgrade         : PropTypes.bool,\n    currency            : PropTypes.string,\n    is_acc_switcher_on  : PropTypes.bool,\n    is_dark_mode        : PropTypes.bool, // TODO: add dark theme handler\n    is_logged_in        : PropTypes.bool,\n    is_mobile           : PropTypes.bool,\n    loginid             : PropTypes.string,\n    onClickUpgrade      : PropTypes.func, // TODO: add click handler\n    toggleAccountsDialog: PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ ui, client }) => ({\n        balance             : client.balance,\n        can_upgrade         : client.can_upgrade,\n        currency            : client.currency,\n        is_logged_in        : client.is_logged_in,\n        loginid             : client.loginid,\n        is_acc_switcher_on  : ui.is_accounts_switcher_on,\n        is_dark_mode        : ui.is_dark_mode_on,\n        is_mobile           : ui.is_mobile,\n        toggleAccountsDialog: ui.toggleAccountsDialog,\n    })\n)(Header));\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst ThemeWrapper = ({ children, is_dark_theme }) => {\n    const theme_wrapper_class = classNames('theme-wrapper', {\n        dark : is_dark_theme,\n        light: !is_dark_theme,\n    });\n    return (\n        <div id='theme_wrapper' className={theme_wrapper_class}>\n            {children}\n        </div>\n    );\n};\n\nThemeWrapper.propTypes = {\n    children     : PropTypes.node,\n    is_dark_theme: PropTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_dark_theme: ui.is_dark_mode_on,\n    }),\n)(ThemeWrapper));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport { connect }                    from 'Stores/connect';\nimport ErrorComponent                 from '../../Components/Elements/Errors';\nimport BinaryRoutes                   from '../../Components/Routes';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes />;\n};\n\nRoutes.propTypes = {\n    error    : MobxPropTypes.objectOrObservableObject,\n    has_error: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ common }) => ({\n        error    : common.error,\n        has_error: common.has_error,\n    })\n)(Routes));\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","import Client from '_common/base/client_base';\n\nexport const isClientAllowedToVisit = () => !Client.isLoggedIn() || Client.get('is_virtual');\n","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { isClientAllowedToVisit }  from 'App/Middlewares/is_client_allowed_to_visit';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PortfolioDrawer             from './Components/Elements/PortfolioDrawer';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport ThemeWrapper                from './Containers/Layout/theme_wrapper.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Components/Elements/DenialOfServiceModal';\n\n// Conditionally loading mobx only on development builds.\n// see https://github.com/mobxjs/mobx-react-devtools/issues/66\nconst { Fragment } = React;\nconst DevTools     = process.env.NODE_ENV !== 'production' ? require('mobx-react-devtools').default : Fragment;\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <ThemeWrapper>\n                <div id='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <DevTools />\n                        <PortfolioDrawer />\n                    </AppContents>\n                    <DenialOfServiceModal visible={!isClientAllowedToVisit()} />\n                </ErrorBoundary>\n\n                <footer id='footer'>\n                    <Footer />\n                </footer>\n            </ThemeWrapper>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='arrow-path' d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='#D2D3DA' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#333' fillRule='nonzero' d='M3.6 8.5L7 12.2a.5.5 0 1 1-.8.6l-4-4.5a.5.5 0 0 1 0-.6l4-4.5a.5.5 0 0 1 .8.6L3.6 7.5h9.9a.5.5 0 1 1 0 1H3.6z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconQuickPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 12'>\n        <path className='color1-fill color3-fill' fill='#2A3052' fillRule='evenodd' d='M1 0h14c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H1a1 1 0 0 1-1-1V1c0-.6.4-1 1-1zm0 1v10h5V1H1zm6 0v10h8V1H7zm1.5 1.5a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconQuickPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuickPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","export * from './icon_maximize.jsx';\nexport * from './icon_quick_portfolio.jsx';\nexport * from './icon_settings.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","export * from './icon_logout.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g className='color2-fill' fill='none' fillRule='evenodd' stroke='none' strokeWidth='1'>\n            <g>\n                <path className='color1-stroke color2-fill color3-stroke' fill='none' stroke='#2A3052' d='M1.5 14.5h13a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1h-13a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1z' />\n                <path className='color1-stroke color3-stroke color4-fill portfolio-fix' stroke='#2A3052' d='M5.5 3v-.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V3' />\n                <path className='color1-stroke scale-fix' stroke='#2A3052' strokeLinecap='square' d='M0 8l4.047 2.248a2 2 0 0 0 .971.252h5.964a2 2 0 0 0 .971-.252L16 8' />\n                <path className='color1-stroke' stroke='#2A3052' strokeLinecap='round' d='M6.5 8.5h3' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","export * from './icon_trade_categories.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='8' width='10' height='1' rx='.5' />\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82l-2.137-1.71z' fillRule='nonzero' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' fillRule='nonzero' />\n                    </g>\n\n                );\n                break;\n            case 'call':\n                IconType = (\n                    <g fill='#2A3052'>\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82 3.812 8.11z' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' />\n                    </g>\n\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 6.75h-4v-1.5h4L4.5 4H6l1.5 2L6 8H4.5l1-1.25zM10.5 11.75h4v-1.5h-4l1-1.25H10l-1.5 2 1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M2.698 9.5H.218v-.537L1.36 7.762c.281-.32.422-.576.422-.764 0-.153-.033-.27-.1-.35-.067-.08-.163-.12-.29-.12a.362.362 0 0 0-.306.16.657.657 0 0 0-.117.4H.144A1.167 1.167 0 0 1 .762 6.05c.193-.104.41-.156.65-.156.383 0 .68.089.887.266.207.178.31.432.31.764 0 .14-.025.277-.077.41a1.793 1.793 0 0 1-.243.417 6.12 6.12 0 0 1-.531.584l-.46.53h1.4V9.5zM9.107 8.194h.47v.825h-.47V10h-1.07v-.98H6.252l-.064-.655 1.85-2.977v-.01h1.07v2.816zm-1.9 0h.83V6.772l-.066.108-.765 1.314zM15.205 5.894v.647h-.037c-.308 0-.56.074-.758.221a.933.933 0 0 0-.365.614.962.962 0 0 1 .703-.273c.308 0 .553.112.735.336.182.225.273.52.273.884 0 .226-.053.434-.16.623a1.141 1.141 0 0 1-.446.443c-.192.107-.404.16-.636.16-.253 0-.478-.058-.677-.172a1.183 1.183 0 0 1-.463-.492 1.62 1.62 0 0 1-.171-.738v-.33c0-.365.078-.695.235-.987.157-.292.381-.52.673-.687.291-.166.614-.249.97-.249h.124zm-.743 1.838a.47.47 0 0 0-.437.262v.246c0 .45.156.674.467.674.125 0 .23-.056.313-.168a.687.687 0 0 0 .126-.423.674.674 0 0 0-.128-.426.41.41 0 0 0-.34-.165z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 8.75H2v-1.5h3.5L4.5 6H6l1.5 2L6 10H4.5l1-1.25zM10.5 8.75H14v-1.5h-3.5l1-1.25H10L8.5 8l1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M2.041 9.5h-.825V6.873l-.81.237v-.625l1.56-.54h.075zM7.26 7.242h.505c.4 0 .6-.196.6-.587a.508.508 0 0 0-.143-.373c-.096-.096-.23-.145-.403-.145a.58.58 0 0 0-.37.124.378.378 0 0 0-.157.308h-1.07c0-.243.068-.46.203-.65.136-.191.323-.34.564-.446.24-.107.504-.16.792-.16.514 0 .918.117 1.212.352.294.234.441.557.441.968 0 .198-.06.386-.182.563a1.3 1.3 0 0 1-.532.43c.245.089.438.224.578.405.14.18.21.404.21.67 0 .414-.16.744-.477.991-.317.248-.734.371-1.25.371a2.05 2.05 0 0 1-.843-.172 1.32 1.32 0 0 1-.589-.48 1.246 1.246 0 0 1-.2-.696h1.076c0 .141.057.264.171.368a.605.605 0 0 0 .423.155.634.634 0 0 0 .45-.157.525.525 0 0 0 .168-.401c0-.233-.058-.398-.174-.495-.116-.098-.277-.146-.482-.146H7.26v-.797zM13.266 7.762l.217-1.817h2.078v.64h-1.409l-.08.706a.973.973 0 0 1 .23-.09c.096-.027.189-.04.28-.04.353 0 .625.105.814.314.19.209.285.502.285.88 0 .228-.051.434-.153.619a1.049 1.049 0 0 1-.428.426c-.184.1-.402.149-.652.149-.223 0-.432-.046-.628-.138a1.126 1.126 0 0 1-.459-.379.92.92 0 0 1-.163-.543h.825c.008.13.05.234.124.31a.395.395 0 0 0 .296.115c.277 0 .415-.205.415-.615 0-.38-.17-.569-.508-.569-.192 0-.335.062-.43.186l-.654-.154z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g transform='matrix(1 0 0 -1 0 16)' fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='#2A3052' fillRule='nonzero'>\n                        <path d='M9.839 9.87a.5.5 0 0 0 .707 0l2.019-2.019a.5.5 0 1 0-.707-.707l-1.666 1.665-3.794-3.793a.5.5 0 0 0-.707 0l-.454.454-.823-.824a.5.5 0 1 0-.707.708L4.884 6.53a.5.5 0 0 0 .707 0l.454-.454L9.839 9.87z' />\n                        <path d='M12.428 8.79a.5.5 0 1 0 1 0V6.667a.5.5 0 0 0-.5-.5h-2.12a.5.5 0 1 0 0 1h1.62v1.621zM3 11.7h10.5a.5.5 0 1 0 0-1H3a.5.5 0 1 0 0 1z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='stroke-white' d='M3 4h10.5' stroke='#2A3052' strokeLinecap='round' />\n                        <path d='M11.074 5.454a.5.5 0 0 0-.707-.708L5.924 9.191a.5.5 0 0 0 .041.744l.953.762-1.272 1.272a.5.5 0 0 0 .707.707l1.666-1.667a.5.5 0 0 0-.04-.744l-.953-.762 4.048-4.05z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M11.263 4.556l.034 3.944H10.282V6.26l-.676-.76H7.34v-.944z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='6.5' width='10' height='1' rx='.5' />\n                        <path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' fillRule='nonzero' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'put':\n                IconType = (\n                    <g fill='#2A3052'><path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export * from './icon_trade_types.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","const routes = {\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","import { CSSTransition } from 'react-transition-group';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport ErrorComponent    from 'App/Components/Elements/Errors';\nimport { connect }       from 'Stores/connect';\nimport ContractDetails   from './contract_details.jsx';\nimport InfoBox           from './info_box.jsx';\nimport SmartChart        from '../../SmartChart';\n\nconst Contract = ({\n    is_mobile,\n    has_error,\n    match,\n    symbol,\n    chart_config,\n    updateChartType,\n    updateGranularity,\n}) => {\n    const form_wrapper_class = is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n    return (\n        <React.Fragment>\n            {\n                has_error ?\n                    <ErrorComponent message={localize('Unknown Error!')} />\n                    :\n                    <div className='trade-container'>\n                        <div className='chart-container notice-msg'>\n                            { symbol &&\n                                <SmartChart\n                                    InfoBox={<InfoBox />}\n                                    symbol={symbol}\n                                    {...chart_config}\n                                    updateChartType={updateChartType}\n                                    updateGranularity={updateGranularity}\n                                />\n                            }\n                        </div>\n                        <div className={form_wrapper_class}>\n                            <CSSTransition\n                                in={!has_error}\n                                timeout={400}\n                                classNames='contract-wrapper'\n                                unmountOnExit\n                            >\n                                <div className='contract-wrapper'>\n                                    <ContractDetails\n                                        contract_id={match.params.contract_id}\n                                        key={match.params.contract_id}\n                                    />\n                                </div>\n                            </CSSTransition>\n                        </div>\n                    </div>\n            }\n        </React.Fragment>\n    );\n};\n\nContract.propTypes = {\n    chart_config: PropTypes.object,\n    has_error   : PropTypes.bool,\n    is_mobile   : PropTypes.bool,\n    match       : PropTypes.object,\n    symbol      : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_config     : modules.contract.chart_config,\n        has_error        : modules.contract.has_error,\n        updateChartType  : modules.contract.updateChartType,\n        updateGranularity: modules.contract.updateGranularity,\n        is_mobile        : ui.is_mobile,\n        symbol           : modules.contract.contract_info.underlying,\n    })\n)(Contract);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\n\nclass ContractDetails extends React.Component {\n    componentDidMount()    { this.props.onMount(this.props.contract_id); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        return (\n            !contract_id ?\n                <UILoader />\n                :\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n        );\n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    })\n)(ContractDetails);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","export default from './Containers/contract.jsx';\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport PropTypes                      from 'prop-types';\nimport PortfolioCard                  from './portfolio_card.jsx';\n\nconst CardList = ({ data, currency }) => (\n    <div className='card-list'>\n        {\n            data.map((portfolio_position, id) => (\n                <PortfolioCard\n                    key={id}\n                    {...portfolio_position}\n                    currency={currency}\n                />\n            ))\n        }\n    </div>\n);\n\nCardList.propTypes = {\n    currency: PropTypes.string,\n    data    : MobxPropTypes.arrayOrObservableArray,\n};\n\nexport default CardList;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <IconPortfolio className='portfolio-empty__icon' />\n        <span className='portfolio-empty__text'>{localize('No open positions.')}</span>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst IndicativeCell = ({ amount, currency, status }) => {\n    const status_class_name = status\n        ? `indicative--${status}`\n        : undefined;\n\n    return (\n        <div className={status_class_name}>\n            <Money amount={amount} currency={currency} />\n\n            {status === 'no-resale' &&\n                <div className='indicative__no-resale-msg'>\n                    {localize('Resale not offered')}\n                </div>\n            }\n        </div>\n    );\n};\n\nIndicativeCell.propTypes = {\n    amount  : PropTypes.number,\n    currency: PropTypes.string,\n    status  : PropTypes.string,\n};\n\nexport default IndicativeCell;\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { NavLink }         from 'react-router-dom';\nimport Money               from 'App/Components/Elements/money.jsx';\nimport { getContractPath } from 'App/Components/Routes/helpers';\nimport RemainingTime       from 'App/Containers/remaining_time.jsx';\n\nconst PortfolioCard = ({\n    currency,\n    details,\n    expiry_time,\n    id,\n    indicative,\n    payout,\n    purchase,\n    reference,\n    status,\n}) => (\n    <NavLink className='portfolio-card card-list__card' activeClassName='active' to={getContractPath(id)}>\n        <div className='portfolio-card__header'>\n            <span className='portfolio-card__date'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n            <span className='portfolio-card__refid'>\n                {reference}\n            </span>\n        </div>\n        <div className='portfolio-card__body'>\n            <div className='portfolio-card__desc'>{details}</div>\n            <div className='portfolio-card__row'>\n                <div className='portfolio-card__cell portfolio-card__purchase'>\n                    <span className='portfolio-card__cell-text'>\n                        <Money amount={purchase} currency={currency} />\n                    </span>\n                </div>\n                <div className='portfolio-card__cell portfolio-card__payout'>\n                    <span className='portfolio-card__cell-text'>\n                        <Money amount={payout} currency={currency} />\n                    </span>\n                </div>\n                <div className={`portfolio-card__cell portfolio-card__indicative portfolio-card__indicative--${status}`}>\n                    <span className='portfolio-card__cell-text'>\n                        <Money amount={indicative} currency={currency} />\n                    </span>\n                </div>\n            </div>\n        </div>\n    </NavLink>\n);\n\nPortfolioCard.propTypes = {\n    currency   : PropTypes.string,\n    details    : PropTypes.string,\n    expiry_time: PropTypes.number,\n    id         : PropTypes.number,\n    indicative : PropTypes.number,\n    payout     : PropTypes.number,\n    purchase   : PropTypes.number,\n    reference  : PropTypes.number,\n    status     : PropTypes.string,\n};\n\nexport default PortfolioCard;\n","import React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport ContractTypeCell from '../Components/contract_type_cell.jsx';\nimport IndicativeCell   from '../Components/indicative_cell.jsx';\n\n/* eslint-disable react/display-name, react/prop-types */\nexport const getTableColumnsTemplate = (currency) => [\n    {\n        title            : localize('Reference No.'),\n        col_index        : 'reference',\n        renderCellContent: ({ cell_value, is_footer }) => (\n            is_footer ? localize('Total') : cell_value\n        ),\n    },\n    {\n        title            : localize('Contract Type'),\n        col_index        : 'type',\n        renderCellContent: ({ cell_value, is_footer }) => {\n            if (is_footer) return '';\n            return <ContractTypeCell type={cell_value} />;\n        },\n    },\n    {\n        title    : localize('Contract Details'),\n        col_index: 'details',\n    },\n    {\n        title            : localize('Remaining Time'),\n        col_index        : 'expiry_time',\n        renderCellContent: ({ cell_value, is_footer }) => is_footer ? '' : <RemainingTime end_time={cell_value} />,\n    },\n    {\n        title            : localize('Potential Payout'),\n        col_index        : 'payout',\n        renderCellContent: ({ cell_value }) => (\n            <Money amount={cell_value} currency={currency} />\n        ),\n    },\n    {\n        title            : localize('Purchase'),\n        col_index        : 'purchase',\n        renderCellContent: ({ cell_value }) => (\n            <Money amount={cell_value} currency={currency} />\n        ),\n    },\n    {\n        title            : localize('Indicative'),\n        col_index        : 'indicative',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <IndicativeCell amount={+cell_value} currency={currency} status={row_obj.status} />\n        ),\n    },\n];\n/* eslint-enable react/display-name, react/prop-types */\n","import classnames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router-dom';\nimport DataTable                      from 'App/Components/Elements/DataTable';\nimport { getContractPath }            from 'App/Components/Routes/helpers';\nimport { connect }                    from 'Stores/connect';\nimport CardList                       from '../Components/card_list.jsx';\nimport EmptyPortfolioMessage          from '../Components/empty_portfolio_message.jsx';\nimport { getTableColumnsTemplate }    from '../Constants/data_table_constants';\nimport Loading                        from '../../../../../templates/_common/components/loading.jsx';\n\nclass Portfolio extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            is_mobile,\n            is_tablet,\n            is_loading,\n            error,\n            totals,\n            is_empty,\n            currency,\n        } = this.props;\n\n        if (error) {\n            return <p>{error}</p>;\n        }\n\n        if (is_loading) {\n            return <Loading />;\n        }\n\n        if (is_empty) {\n            return <EmptyPortfolioMessage />;\n        }\n\n        const should_show_cards = is_mobile || is_tablet;\n\n        return (\n            <div className={classnames('portfolio container', { 'portfolio--card-view': should_show_cards })}>\n                {\n                    should_show_cards ?\n                        <CardList data={active_positions} currency={currency} />\n                        :\n                        <DataTable\n                            columns={getTableColumnsTemplate(currency)}\n                            data_source={active_positions}\n                            footer={totals}\n                            has_fixed_header\n                            getRowLink={(row_obj) => getContractPath(row_obj.id)}\n                        />\n                }\n            </div>\n        );\n    }\n}\n\nPortfolio.propTypes = {\n    active_positions: MobxPropTypes.arrayOrObservableArray,\n    currency        : PropTypes.string,\n    error           : PropTypes.string,\n    history         : PropTypes.object,\n    is_empty        : PropTypes.bool,\n    is_loading      : PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_tablet       : PropTypes.bool,\n    onMount         : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    totals          : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        currency        : client.currency,\n        active_positions: modules.portfolio.active_positions,\n        error           : modules.portfolio.error,\n        is_empty        : modules.portfolio.is_empty,\n        is_loading      : modules.portfolio.is_loading,\n        totals          : modules.portfolio.totals,\n        onMount         : modules.portfolio.onMount,\n        onUnmount       : modules.portfolio.onUnmount,\n        is_mobile       : ui.is_mobile,\n        is_tablet       : ui.is_tablet,\n    })\n)(withRouter(Portfolio));\n","export default from './Containers/portfolio.jsx';\n","import { Marker }   from '@binary-com/smartcharts';\nimport { toJS }     from 'mobx';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst ChartMarker = ({\n    marker_config,\n    marker_content_props,\n}) => {\n    const { ContentComponent, ...marker_props } = marker_config;\n\n    return (\n        <Marker {...toJS(marker_props)}>\n            <ContentComponent {...toJS(marker_content_props)} />\n        </Marker>\n    );\n};\n\nChartMarker.propTypes = {\n    marker_config       : PropTypes.object,\n    marker_content_props: PropTypes.object,\n};\n\nexport default observer(ChartMarker);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import {\n    ChartSize,\n    ChartTypes,\n    Comparison,\n    CrosshairToggle,\n    DrawTools,\n    Share,\n    StudyLegend,\n    Timeperiod,\n    Views }           from '@binary-com/smartcharts';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\n\nconst ControlWidgets = ({\n    updateChartType,\n    updateGranularity,\n}) => (\n    <React.Fragment>\n        <CrosshairToggle />\n        <ChartTypes onChange={updateChartType} />\n        <StudyLegend />\n        <Comparison />\n        <DrawTools />\n        <Views />\n        <Share />\n        <Timeperiod onChange={updateGranularity} />\n        <ChartSize />\n    </React.Fragment>\n);\n\nControlWidgets.propTypes = {\n    updateChartType  : PropTypes.func,\n    updateGranularity: PropTypes.func,\n};\n\nexport default ControlWidgets;\n","import {\n    AssetInformation,\n    ChartTitle }      from '@binary-com/smartcharts';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\n\nconst TopWidgets = ({\n    InfoBox,\n    is_title_enabled = true,\n    onSymbolChange,\n}) => (\n    <React.Fragment>\n        {InfoBox}\n        <ChartTitle enabled={is_title_enabled} onChange={onSymbolChange} />\n        <AssetInformation />\n    </React.Fragment>\n);\n\nTopWidgets.propTypes = {\n    InfoBox         : PropTypes.node,\n    is_title_enabled: PropTypes.bool,\n    onSymbolChange  : PropTypes.func,\n};\n\nexport default TopWidgets;\n","import { SmartChart }   from '@binary-com/smartcharts';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { connect }      from 'Stores/connect';\nimport ControlWidgets   from '../Components/control_widgets.jsx';\nimport ChartMarker      from '../Components/Markers/marker.jsx';\nimport TopWidgets       from '../Components/top_widgets.jsx';\nimport { symbolChange } from '../Helpers/symbol';\n\nclass Chart extends React.Component {\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    chartControlsWidgets = () => (\n        <ControlWidgets\n            updateChartType={this.props.updateChartType}\n            updateGranularity={this.props.updateGranularity}\n        />\n    );\n\n    topWidgets = () => (\n        <TopWidgets\n            InfoBox={this.props.InfoBox}\n            is_title_enabled={this.props.is_title_enabled}\n            onSymbolChange={symbolChange(this.props.onSymbolChange)}\n        />\n    );\n\n    render() {\n        return (\n            <SmartChart\n                barriers={this.props.barriers_array}\n                chartControlsWidgets={this.chartControlsWidgets}\n                chartType={this.props.chart_type}\n                endEpoch={this.props.end_epoch}\n                granularity={this.props.granularity}\n                id={this.props.chart_id}\n                isMobile={this.props.is_mobile}\n                requestAPI={this.props.wsSendRequest}\n                requestForget={this.props.wsForget}\n                requestSubscribe={this.props.wsSubscribe}\n                settings={this.props.settings}\n                startEpoch={this.props.start_epoch}\n                symbol={this.props.symbol}\n                topWidgets={this.topWidgets}\n            >\n                { this.props.markers_array.map((marker, idx) => (\n                    <ChartMarker\n                        key={idx}\n                        marker_config={marker.marker_config}\n                        marker_content_props={marker.content_config}\n                    />\n                ))}\n            </SmartChart>\n        );\n    }\n}\n\nChart.propTypes = {\n    barriers_array  : PropTypes.array,\n    chart_id        : PropTypes.number,\n    chart_type      : PropTypes.string,\n    end_epoch       : PropTypes.number,\n    granularity     : PropTypes.number,\n    InfoBox         : PropTypes.node,\n    is_mobile       : PropTypes.bool,\n    is_title_enabled: PropTypes.bool,\n    markers_array   : PropTypes.array,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    settings        : PropTypes.object,\n    start_epoch     : PropTypes.number,\n    symbol          : PropTypes.string,\n    wsForget        : PropTypes.func,\n    wsSendRequest   : PropTypes.func,\n    wsSubscribe     : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        barriers_array  : modules.smart_chart.barriers_array,\n        is_title_enabled: modules.smart_chart.is_title_enabled,\n        markers_array   : modules.smart_chart.markers_array,\n        onUnmount       : modules.smart_chart.onUnmount,\n        settings        : modules.smart_chart.settings,\n        wsForget        : modules.smart_chart.wsForget,\n        wsSendRequest   : modules.smart_chart.wsSendRequest,\n        wsSubscribe     : modules.smart_chart.wsSubscribe,\n        is_mobile       : ui.is_mobile,\n    })\n)(Chart);\n","export const symbolChange = (onSymbolChange) => (\n    onSymbolChange &&\n    ((symbol) => {\n        onSymbolChange({\n            target: {\n                name : 'symbol',\n                value: symbol,\n            },\n        });\n    })\n);\n","export default from './Containers/smart_chart.jsx';\n","import React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst AmountCell = ({ value }) => {\n    const status = +value.replace(/,/g, '') >= 0 ? 'profit' : 'loss';\n\n    return (\n        <span className={`amount--${status}`}>\n            {value}\n        </span>\n    );\n};\n\nAmountCell.propTypes = {\n    value: PropTypes.string,\n};\n\nexport default AmountCell;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconStatement } from 'Assets/Header/NavBar';\nimport Button            from 'App/Components/Form/button.jsx';\n\nconst EmptyStatementMessage = ({ has_selected_date }) => (\n    <div className='statement-empty'>\n        <IconStatement className='statement-empty__icon' />\n        <span className='statement-empty__text'>\n            {\n                !has_selected_date ?\n                    localize('Your account has no trading activity.')\n                    :\n                    localize('Your account has no trading activity for the selected period.')\n            }\n        </span>\n        {\n            !has_selected_date &&\n            <Button className='secondary orange' text={localize('Trade now')} />\n        }\n    </div>\n);\n\nEmptyStatementMessage.propTypes = {\n    has_selected_date: PropTypes.bool,\n};\n\nexport default EmptyStatementMessage;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { NavLink }         from 'react-router-dom';\nimport { getContractPath } from 'App/Components/Routes/helpers';\n\nconst StatementCard = ({\n    action,\n    amount,\n    balance,\n    className,\n    date,\n    desc,\n    id,\n    payout,\n    refid,\n}) => {\n    const content = (\n        <React.Fragment>\n            <div className='statement-card__header'>\n                <span className='statement-card__date'>{date}</span>\n                <span className='statement-card__refid'>\n                    {refid}\n                </span>\n            </div>\n            <div className='statement-card__body'>\n                <div className='statement-card__desc'>{desc}</div>\n                <div className='statement-card__row'>\n                    <div className={`statement-card__cell statement-card__amount statement-card__amount--${action.toLowerCase()}`}>\n                        <span className='statement-card__cell-text'>\n                            {amount}\n                        </span>\n                    </div>\n                    <div className='statement-card__cell statement-card__payout'>\n                        <span className='statement-card__cell-text'>\n                            {payout}\n                        </span>\n                    </div>\n                    <div className='statement-card__cell statement-card__balance'>\n                        <span className='statement-card__cell-text'>\n                            {balance}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n\n    const class_name = classNames('statement-card', className);\n\n    return (\n        id ?\n            <NavLink className={class_name} activeClassName='active' to={getContractPath(id)}>\n                {content}\n            </NavLink>\n            :\n            <div className={class_name}>\n                {content}\n            </div>\n    );\n};\n\nStatementCard.propTypes = {\n    action   : PropTypes.string,\n    amount   : PropTypes.string,\n    balance  : PropTypes.string,\n    className: PropTypes.string,\n    date     : PropTypes.string,\n    desc     : PropTypes.string,\n    id       : PropTypes.string,\n    payout   : PropTypes.string,\n    refid    : PropTypes.string,\n};\n\nexport default StatementCard;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport PropTypes                      from 'prop-types';\nimport StatementCard                  from './statement_card.jsx';\n\nconst StatementCardList = ({ data, onScroll, children }) => (\n    <div className='card-list' onScroll={onScroll}>\n        {\n            data.map((transaction, id) => (\n                <StatementCard className='card-list__card' {...transaction} key={id} />\n            ))\n        }\n        {children}\n    </div>\n);\n\nStatementCardList.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.arrayOf(PropTypes.node),\n    ]),\n    data    : MobxPropTypes.arrayOrObservableArray,\n    onScroll: PropTypes.func,\n};\n\nexport default StatementCardList;\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport AmountCell   from '../Components/amount_cell.jsx';\n\n/* eslint-disable react/display-name, react/prop-types */\nexport const getTableColumnsTemplate = () =>\n    [\n        { title: localize('Date'),             col_index: 'date'    },\n        { title: localize('Ref.'),             col_index: 'refid'   },\n        { title: localize('Description'),      col_index: 'desc'    },\n        { title: localize('Action'),           col_index: 'action'  },\n        { title: localize('Potential Payout'), col_index: 'payout'  },\n        { title: localize('Credit/Debit'),     col_index: 'amount', renderCellContent: ({ cell_value }) => <AmountCell value={cell_value} /> },\n        { title: localize('Balance'),          col_index: 'balance' },\n    ];\n/* eslint-enable react/display-name, react/prop-types */\n","import classnames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router-dom';\nimport DataTable                      from 'App/Components/Elements/DataTable';\nimport { getContractPath }            from 'App/Components/Routes/helpers';\nimport { connect }                    from 'Stores/connect';\nimport Filter                         from './statement_filter.jsx';\nimport StatementCardList              from '../Components/statement_card_list.jsx';\nimport EmptyStatementMessage          from '../Components/empty_statement_message.jsx';\nimport { getTableColumnsTemplate }    from '../Constants/data_table_constants';\nimport Loading                        from '../../../../../templates/_common/components/loading.jsx';\n\nclass Statement extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            has_selected_date,\n            data,\n            is_empty,\n            is_loading,\n            is_mobile,\n            is_tablet,\n            error,\n            handleScroll,\n        } = this.props;\n\n\n        if (error) return <p>{error}</p>;\n\n        const columns = getTableColumnsTemplate();\n        const should_show_cards = is_mobile || is_tablet;\n\n        const renderGUI = () => (\n            <React.Fragment>\n                {\n                    is_empty &&\n                    <EmptyStatementMessage has_selected_date={has_selected_date} />\n                }\n                {\n                    is_loading &&\n                    <Loading />\n                }\n            </React.Fragment>\n        );\n\n        return (\n            <div className={classnames('statement container', { 'statement--card-view': should_show_cards })}>\n                <Filter use_native_pickers={should_show_cards} />\n                <div className='statement__content'>\n                    {\n                        should_show_cards ?\n                            <React.Fragment>\n                                <StatementCardList\n                                    data={data}\n                                    onScroll={handleScroll}\n                                >\n                                    {renderGUI()}\n                                </StatementCardList>\n                            </React.Fragment>\n                            :\n                            <DataTable\n                                data_source={data}\n                                columns={columns}\n                                onScroll={handleScroll}\n                                getRowLink={(row_obj) => row_obj.id ? getContractPath(row_obj.id) : undefined}\n                            >\n                                {renderGUI()}\n                            </DataTable>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nStatement.propTypes = {\n    data             : MobxPropTypes.arrayOrObservableArray,\n    error            : PropTypes.string,\n    handleScroll     : PropTypes.func,\n    has_selected_date: PropTypes.bool,\n    history          : PropTypes.object,\n    is_empty         : PropTypes.bool,\n    is_loading       : PropTypes.bool,\n    is_mobile        : PropTypes.bool,\n    is_tablet        : PropTypes.bool,\n    onMount          : PropTypes.func,\n    onUnmount        : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        is_empty         : modules.statement.is_empty,\n        has_selected_date: modules.statement.has_selected_date,\n        data             : modules.statement.data,\n        is_loading       : modules.statement.is_loading,\n        error            : modules.statement.error,\n        onMount          : modules.statement.onMount,\n        onUnmount        : modules.statement.onUnmount,\n        handleScroll     : modules.statement.handleScroll,\n        is_mobile        : ui.is_mobile,\n        is_tablet        : ui.is_tablet,\n    })\n)(withRouter(Statement));\n","import moment       from 'moment';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DatePicker   from 'App/Components/Form/DatePicker';\nimport { connect }  from 'Stores/connect';\n\nconst Filter = ({\n    date_from,\n    date_to,\n    handleDateChange,\n    today,\n    use_native_pickers,\n}) => (\n    <div className='statement-filter'>\n        <div className='statement-filter__content'>\n            <span className='statement-filter__label'>{localize('Filter by date:')}</span>\n            <DatePicker\n                name='date_from'\n                placeholder={localize('Start date')}\n                start_date={date_to || today}\n                max_date={date_to || today}\n                onChange={handleDateChange}\n                value={date_from}\n                is_nativepicker={use_native_pickers}\n            />\n            <span className='statement-filter__dash'>&mdash;</span>\n            <DatePicker\n                name='date_to'\n                placeholder={localize('End date')}\n                start_date={today}\n                min_date={date_from}\n                max_date={today}\n                has_today_btn\n                onChange={handleDateChange}\n                value={date_to}\n                is_nativepicker={use_native_pickers}\n            />\n        </div>\n    </div>\n);\n\nFilter.propTypes = {\n    date_from         : PropTypes.string,\n    date_to           : PropTypes.string,\n    handleDateChange  : PropTypes.func,\n    server_time       : PropTypes.object,\n    today             : PropTypes.string,\n    use_native_pickers: PropTypes.bool,\n};\n\nexport default connect(\n    ({ common, modules }) => ({\n        today           : moment(common.server_time).format('YYYY-MM-DD'),\n        date_from       : modules.statement.date_from,\n        date_to         : modules.statement.date_to,\n        handleDateChange: modules.statement.handleDateChange,\n    })\n)(Filter);\n","export default from './Containers/statement.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className='contracts-modal-list'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children: PropTypes.any,\n    onClose : PropTypes.func,\n    title   : PropTypes.string,\n    visible : PropTypes.bool,\n};\n\nexport default FullScreenDialog;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={() => handleSelect(contract)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts   : MobxPropTypes.arrayOrObservableArray,\n    handleSelect: PropTypes.func,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleSelect: PropTypes.func,\n    list        : MobxPropTypes.objectOrObservableObject,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconArrow }         from 'Assets/Common';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        }\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    }\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                    onBlur={this.handleVisibility}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <IconArrow className='select-arrow' />\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                    />\n                </ContractTypeDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-error-wrapper'>\n        <span className='info-text'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a href='javascript:;'><span className='info-text'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-error'>\n            <div className='close-btn-container' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-result-wrapper'>\n        <div>\n            <strong>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='label'>{localize('Buy Price')}:</span>\n            <span className='buy-price'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Payout')}:</span>\n            <span className='payout'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-lock-container'>\n        <div className='lock-container'>\n            <IconLock className='ic-lock' />\n        </div>\n        <h4>{localize('Purchase Locked')}</h4>\n        <Button\n            className='flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\n\nconst ContractInfo = ({\n    barrier_count,\n    contract_title,\n    contract_type,\n    currency,\n    proposal_info,\n}) => {\n    const icon_type = `${contract_type}${/^(call|put)$/i.test(contract_type) && barrier_count > 0 ? '_barrier' : ''}`.toLowerCase();\n\n    return (\n        <div className='box'>\n            <div className='left-column'>\n                <div className='type-wrapper'>\n                    <IconTradeType type={icon_type} className='type' />\n                </div>\n                <h4 className='trade-type'>{contract_title}</h4>\n            </div>\n            {(proposal_info.has_error || !proposal_info.id) ?\n                <div className={proposal_info.has_error ? 'error-info-wrapper' : ''}>\n                    <span>{proposal_info.message}</span>\n                </div>\n                :\n                <div className='purchase-info-wrapper'>\n                    <span className='purchase-tooltip'>\n                        <Tooltip alignment='left' icon='info' message={proposal_info.message} />\n                    </span>\n                    <div className='info-wrapper'>\n                        <div>{localize('Stake')}:</div>\n                        <div><Money amount={proposal_info.stake} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Payout')}:</div>\n                        <div><Money amount={proposal_info.payout} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Net Profit')}:</div>\n                        <div><Money amount={proposal_info.profit} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Return')}:</div>\n                        <div>{proposal_info.returns}</div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nContractInfo.propTypes = {\n    barrier_count : PropTypes.number,\n    contract_title: PropTypes.string,\n    contract_type : PropTypes.string,\n    currency      : PropTypes.string,\n    proposal_info : PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport Client                   from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }          from '_common/base/currency_base';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/dropdown.jsx';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const has_currency = Client.get('currency');\n    const amount_container_class = classNames('amount-container', {\n        'three-columns': !has_currency,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Invest Amount')}\n            icon='invest-amount'\n        >\n            <div className={amount_container_class}>\n                <Dropdown\n                    list={basis_list}\n                    value={basis}\n                    name='basis'\n                    onChange={onChange}\n                    is_nativepicker={is_nativepicker}\n                />\n                {!has_currency &&\n                    <Dropdown\n                        list={currencies_list}\n                        value={currency}\n                        name='currency'\n                        onChange={onChange}\n                        is_nativepicker={is_nativepicker}\n                    />\n                }\n                <InputField\n                    error_messages = {validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={has_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis            : PropTypes.string,\n    basis_list       : MobxPropTypes.arrayOrObservableArray,\n    currencies_list  : PropTypes.object,\n    currency         : PropTypes.string,\n    is_minimized     : PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Amount);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/input_field.jsx';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Fieldset\n            header={barrier_count > 1 ? localize('Barriers') : localize('Barrier')}\n            icon='barriers'\n        >\n            <InputField\n                type='number'\n                name='barrier_1'\n                value={barrier_1}\n                onChange={onChange}\n                error_messages = {validation_errors.barrier_1 || []}\n                is_float\n                is_signed\n            />\n\n            {barrier_count === 2 &&\n                <InputField\n                    type='number'\n                    name='barrier_2'\n                    value={barrier_2}\n                    onChange={onChange}\n                    error_messages = {validation_errors.barrier_2}\n                    is_float\n                    is_signed\n                />\n            }\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport moment                   from 'moment';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Datepicker               from 'App/Components/Form/DatePicker';\nimport Dropdown                 from 'App/Components/Form/dropdown.jsx';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\nimport { convertDurationUnit }  from 'Stores/Modules/Trading/Helpers/duration';\n\n/* TODO:\n      1. disable days other than today and tomorrow if start date is forward starting\n*/\n\nconst expiry_list = [\n    { text: localize('Duration'), value: 'duration' },\n];\n\nlet now_date,\n    min_date_duration,\n    max_date_duration,\n    min_date_expiry,\n    min_day,\n    max_day,\n    start_date_time;\n\nconst Duration = ({\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    onChange,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    validation_errors,\n}) => {\n    if (duration_min_max[contract_expiry_type]) {\n        const moment_now  = moment(server_time);\n        const new_min_day = convertDurationUnit(duration_min_max[contract_expiry_type].min, 's', 'd');\n        const new_max_day = convertDurationUnit(duration_min_max[contract_expiry_type].max, 's', 'd');\n        if (!now_date || moment_now.date() !== now_date.date() || (duration_unit === 'd' && (min_day !== new_min_day || max_day !== new_max_day))) {\n            if (duration_unit === 'd') {\n                min_day = new_min_day;\n                max_day = new_max_day;\n            }\n\n            const moment_today = moment_now.clone().startOf('day');\n\n            now_date          = moment_now.clone();\n            min_date_duration = moment_today.clone().add(min_day || 1, 'd');\n            max_date_duration = moment_today.clone().add(max_day || 365, 'd');\n            min_date_expiry   = moment_today.clone();\n        }\n    }\n\n    const moment_expiry = moment.utc(expiry_date);\n    const is_same_day   = moment_expiry.isSame(moment(start_date * 1000 || undefined).utc(), 'day');\n    if (is_same_day) {\n        const date_time = moment.utc(start_date * 1000 || undefined);\n        if (start_date) {\n            const [ hour, minute ] = start_time.split(':');\n            date_time.hour(hour).minute(minute).second(0).add(5, 'minutes');\n        }\n        // only update start time every five minutes, since time picker shows five minute durations\n        const moment_start_date_time = moment.unix(start_date_time);\n        if (!start_date_time || moment_start_date_time.isAfter(date_time) || moment_start_date_time.clone().add(5, 'minutes').isBefore(date_time) ||\n            (moment_start_date_time.minutes() !== date_time.minutes() && date_time.minutes() % 5 === 0)) {\n            start_date_time = date_time.unix();\n        }\n    }\n    if (is_minimized) {\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n    const datepicker_footer = min_day > 1 ?\n        localize('The minimum duration is [_1] days', [min_day]) :\n        localize('The minimum duration is [_1] day',  [min_day]);\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_same_day,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Trade Duration')}\n            icon='trade-duration'\n        >\n            <Dropdown\n                list={expiry_list}\n                value={expiry_type}\n                name='expiry_type'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n\n            {expiry_type === 'duration' ?\n                <React.Fragment>\n                    <div className='duration-container'>\n                        {duration_unit === 'd' && !is_nativepicker ?\n                            <Datepicker\n                                name='duration'\n                                min_date={min_date_duration}\n                                max_date={max_date_duration}\n                                mode='duration'\n                                onChange={onChange}\n                                value={duration || min_day}\n                                is_read_only\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                footer={datepicker_footer}\n                            /> :\n                            <InputField\n                                type='number'\n                                name='duration'\n                                value={duration}\n                                onChange={onChange}\n                                is_nativepicker={is_nativepicker}\n                                error_messages = {validation_errors.duration || []}\n                            />\n                        }\n                        <Dropdown\n                            list={duration_units_list}\n                            value={duration_unit}\n                            name='duration_unit'\n                            onChange={onChange}\n                            is_nativepicker={is_nativepicker}\n                        />\n                    </div>\n                </React.Fragment> :\n                <React.Fragment>\n                    <div className={endtime_container_class}>\n                        <Datepicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_clearable={false}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        {is_same_day &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                value={expiry_time}\n                                placeholder='12:00'\n                                start_date={start_date_time}\n                                sessions={sessions}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                            />\n                        }\n                    </div>\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\n// ToDo: Refactor Duration.jsx and date_picker.jsx\nDuration.propTypes = {\n    contract_expiry_type: PropTypes.string,\n    duration            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time    : PropTypes.string,\n    expiry_type    : PropTypes.string,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    server_time    : PropTypes.object,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Duration);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Dropdown     from 'App/Components/Form/dropdown.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\n\nconst last_digit_numbers = [...Array(10).keys()].map(number => ({\n    text : number,\n    value: number,\n}));\n\nconst LastDigit = ({\n    is_minimized,\n    is_nativepicker,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Last Digit Prediction')}\n            icon='digits'\n        >\n            <Dropdown\n                list={last_digit_numbers}\n                value={+last_digit}\n                name='last_digit'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    last_digit     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/dropdown.jsx';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\n\n/* TODO:\n    1. update sessions list when the selected one doesn’t have any enabled time\n*/\n\nconst StartDate = ({\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    sessions,\n    start_date,\n    start_dates_list,\n    start_time,\n}) => {\n    // Number(0) refers to 'now'\n    const is_today = start_date === Number(0);\n    let current_date_config = '';\n    if (!is_today) {\n        current_date_config = start_dates_list.find(o => o.value === +start_date) || {};\n    }\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized start-date'>\n                <span className='icon start-time' />\n                {is_today ? localize('Now') : `${current_date_config.text}\\n${start_time}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Start time')}\n            icon='start-time'\n        >\n            <Dropdown\n                name='start_date'\n                value={start_date}\n                list={start_dates_list}\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n            {!is_today &&\n                <React.Fragment>\n                    <TimePicker\n                        onChange={onChange}\n                        is_align_right\n                        name='start_time'\n                        value={start_time}\n                        placeholder='12:00'\n                        start_date={start_date}\n                        sessions={sessions}\n                        is_clearable={false}\n                        is_nativepicker={is_nativepicker}\n                    />\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nStartDate.propTypes = {\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_dates_list: MobxPropTypes.arrayOrObservableArray,\n    start_time      : PropTypes.string,\n};\n\nexport default observer(StartDate);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <fieldset className='trade-types'>\n                    <ContractType />\n                </fieldset>\n                <TradeParams />\n                <div className='purchase-wrapper'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-wrapper'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","import PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from '_common/localize';\nimport { isEmptyObject }          from '_common/utility';\nimport { PopConfirm }             from 'App/Components/Elements/PopConfirm';\nimport UILoader                   from 'App/Components/Elements/ui_loader.jsx';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Fieldset                   from 'App/Components/Form/fieldset.jsx';\nimport { connect }                from 'Stores/connect';\nimport { isClientAllowedToVisit } from 'App/Middlewares/is_client_allowed_to_visit';\nimport ContractInfo               from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox                 from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock               from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    barrier_count,\n    currency,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !isClientAllowedToVisit();\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary green'\n                has_effect\n                text={localize('Purchase')}\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n                wrapperClassName='submit-section'\n            />\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='purchase-option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader />\n                        }\n                        <ContractInfo\n                            barrier_count={barrier_count}\n                            contract_title={trade_types[type]}\n                            contract_type={type}\n                            currency={currency}\n                            proposal_info={info}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    barrier_count         : PropTypes.number,\n    currency              : PropTypes.string,\n    is_purchase_confirm_on: PropTypes.bool,\n    is_purchase_enabled   : PropTypes.bool,\n    is_purchase_locked    : PropTypes.bool,\n    is_trade_enabled      : PropTypes.bool,\n    onClickPurchase       : PropTypes.func,\n    onHoverPurchase       : PropTypes.func,\n    proposal_info         : PropTypes.object,\n    purchase_info         : PropTypes.object,\n    resetPurchase         : PropTypes.func,\n    togglePurchaseLock    : PropTypes.func,\n    trade_types           : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        barrier_count         : modules.trade.barrier_count,\n        currency              : modules.trade.currency,\n        is_purchase_enabled   : modules.trade.is_purchase_enabled,\n        is_trade_enabled      : modules.trade.is_trade_enabled,\n        onClickPurchase       : modules.trade.onPurchase,\n        onHoverPurchase       : modules.trade.onHoverPurchase,\n        resetPurchase         : modules.trade.requestProposal,\n        proposal_info         : modules.trade.proposal_info,\n        purchase_info         : modules.trade.purchase_info,\n        trade_types           : modules.trade.trade_types,\n        is_purchase_confirm_on: ui.is_purchase_confirm_on,\n        is_purchase_locked    : ui.is_purchase_lock_on,\n        togglePurchaseLock    : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\nimport SmartChart           from '../../SmartChart';\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container notice-msg'>\n                    { this.props.symbol &&\n                        <SmartChart\n                            chart_id={this.props.chart_id}\n                            InfoBox={<InfoBox is_trade_page />}\n                            onSymbolChange={this.props.onSymbolChange}\n                            symbol={this.props.symbol}\n                            chart_type={this.props.chart_type}\n                            granularity={this.props.granularity}\n                            updateChartType={this.props.updateChartType}\n                            updateGranularity={this.props.updateGranularity}\n                        />\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ common, modules }) => ({\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n    })\n)(TradeParams);\n","export default from './Containers/trade.jsx';\n","import React     from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList  from './menu_list.jsx';\n\nconst Menu = ({ data }) => (\n    <div className='settings-menu'>\n        {\n            data.map(group => (\n                <div key={group.title}>\n                    <h2 className='settings-menu__group-header'>{group.title}</h2>\n                    <hr className='settings-menu__separator' />\n                    <MenuList items={group.items} />\n                </div>\n            ))\n        }\n    </div>\n);\n\nMenu.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            items: PropTypes.array,\n            title: PropTypes.string,\n        })\n    ),\n};\n\nexport default Menu;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Url         from '_common/url';\n\n// TODO: use BinaryLink once it supports nested routes\nconst MenuItem = ({ title, description, img_src, path }) => {\n    const itemContent = (\n        <React.Fragment>\n            <img className='menu-item__img' src={Url.urlForStatic(img_src)} />\n            <div className='menu-item__content'>\n                <div className='menu-item__title'>{title}</div>\n                <div className='menu-item__description'>{description}</div>\n            </div>\n        </React.Fragment>\n    );\n\n    return (\n        path ?\n            <NavLink className='menu-item' to={path} activeClassName='menu-item--active'>\n                {itemContent}\n            </NavLink>\n            :\n            <div className='menu-item'>{itemContent}</div>\n    );\n};\n\nMenuItem.propTypes = {\n    description: PropTypes.string,\n    img_src    : PropTypes.string,\n    path       : PropTypes.string,\n    title      : PropTypes.string,\n};\n\nexport default MenuItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from './menu_item.jsx';\n\nconst MenuList = ({ items }) => (\n    <div>\n        {\n            items.map(({ title, description, img_src, path }, i) => (\n                <MenuItem\n                    key={i}\n                    title={title}\n                    description={description}\n                    img_src={img_src}\n                    path={path}\n                />\n            ))\n        }\n    </div>\n);\n\nMenuList.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            description: PropTypes.string,\n            img_src    : PropTypes.string,\n            path       : PropTypes.string,\n            title      : PropTypes.string,\n        })\n    ),\n};\n\nexport default MenuList;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MenuItem          from './menu_item.jsx';\n\nclass MobileDropdown extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    toggleOpen = () => {\n        this.setState({\n            is_open: !this.state.is_open,\n        });\n    };\n\n    componentWillReceiveProps() {\n        this.setState({\n            is_open: false,\n        });\n    }\n\n    render() {\n        const { all_items, children } = this.props;\n        const { is_open } = this.state;\n        return (\n            <div className={classNames('mobile-dropdown', { 'mobile-dropdown--open': is_open })}>\n                <div className='mobile-dropdown__button' onClick={this.toggleOpen}>\n                    <Switch>\n                        {\n                            all_items.map(({ title, description, path, img_src }) => (\n                                <Route\n                                    key={path}\n                                    path={path}\n                                    render={() =>\n                                        <MenuItem\n                                            title={title}\n                                            description={description}\n                                            img_src={img_src}\n                                        />\n                                    }\n                                />\n                            ))\n                        }\n                    </Switch>\n                    <span className='select-arrow' />\n                </div>\n                <div className='mobile-dropdown__menu'>{children}</div>\n            </div>\n        );\n    }\n}\n\nMobileDropdown.propTypes = {\n    all_items: PropTypes.arrayOf(\n        PropTypes.shape({\n            description: PropTypes.string,\n            img_src    : PropTypes.string,\n            path       : PropTypes.string,\n            title      : PropTypes.string,\n        })\n    ),\n    children: PropTypes.element,\n};\n\nexport default MobileDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, description, children }) => (\n    <div className='section'>\n        <h2 className='section__title'>{title}</h2>\n        <h4 className='section__description'>{description}</h4>\n        {children}\n    </div>\n);\n\nSection.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n    description: PropTypes.string,\n    title      : PropTypes.string,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Section   from '../components/section.jsx';\n\nconst AccountPassword = ({ title, description }) => (\n    <Section title={title} description={description}>\n        {/* content here */}\n    </Section>\n);\n\nAccountPassword.propTypes = {\n    description: PropTypes.string,\n    title      : PropTypes.string,\n};\n\nexport default AccountPassword;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Section   from '../components/section.jsx';\n\nconst ApiToken = ({ title, description }) => (\n    <Section title={title} description={description}>\n        {/* content here */}\n    </Section>\n);\n\nApiToken.propTypes = {\n    description: PropTypes.string,\n    title      : PropTypes.string,\n};\n\nexport default ApiToken;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Section   from '../components/section.jsx';\n\nconst AuthorizedApplications = ({ title, description }) => (\n    <Section title={title} description={description}>\n        {/* content here */}\n    </Section>\n);\n\nAuthorizedApplications.propTypes = {\n    description: PropTypes.string,\n    title      : PropTypes.string,\n};\n\nexport default AuthorizedApplications;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Section   from '../components/section.jsx';\n\nconst CashierPassword = ({ title, description }) => (\n    <Section title={title} description={description}>\n        {/* content here */}\n    </Section>\n);\n\nCashierPassword.propTypes = {\n    description: PropTypes.string,\n    title      : PropTypes.string,\n};\n\nexport default CashierPassword;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Section   from '../components/section.jsx';\n\nconst FinancialAssessment = ({ title, description }) => (\n    <Section title={title} description={description}>\n        {/* content here */}\n    </Section>\n);\n\nFinancialAssessment.propTypes = {\n    description: PropTypes.string,\n    title      : PropTypes.string,\n};\n\nexport default FinancialAssessment;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Section   from '../components/section.jsx';\n\nconst Limits = ({ title, description }) => (\n    <Section title={title} description={description}>\n        {/* content here */}\n    </Section>\n);\n\nLimits.propTypes = {\n    description: PropTypes.string,\n    title      : PropTypes.string,\n};\n\nexport default Limits;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Section   from '../components/section.jsx';\n\nconst LoginHistory = ({ title, description }) => (\n    <Section title={title} description={description}>\n        {/* content here */}\n    </Section>\n);\n\nLoginHistory.propTypes = {\n    description: PropTypes.string,\n    title      : PropTypes.string,\n};\n\nexport default LoginHistory;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Section   from '../components/section.jsx';\n\nconst PersonalDetails = ({ title, description }) => (\n    <Section title={title} description={description}>\n        {/* content here */}\n    </Section>\n);\n\nPersonalDetails.propTypes = {\n    description: PropTypes.string,\n    title      : PropTypes.string,\n};\n\nexport default PersonalDetails;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Section   from '../components/section.jsx';\n\nconst SelfExclusion = ({ title, description }) => (\n    <Section title={title} description={description}>\n        {/* content here */}\n    </Section>\n);\n\nSelfExclusion.propTypes = {\n    description: PropTypes.string,\n    title      : PropTypes.string,\n};\n\nexport default SelfExclusion;\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Menu                        from './components/menu/menu.jsx';\nimport MobileDropdown              from './components/menu/mobile_dropdown.jsx';\n\nimport settings_data from './settings_data';\n\nconst Settings = ({ match, routes }) => {\n    const component_to_path = routes.reduce((map, { component, path }) => {\n        map[component.displayName || component.name] = path;\n        return map;\n    }, {});\n\n    // Redirect doesn't work with relative paths\n    // const getAbsolutePath = (component) => {\n    //     const path = component_to_path[component.displayName || component.name];\n    //     const base = match.url[match.url.length - 1] === '/'\n    //         ? match.url.slice(0, -1)\n    //         : match.url;\n    //     return `${base}${path}`;\n    // };\n\n    // Add paths from this.props.routes to items\n    const data = settings_data.map(section => ({\n        ...section,\n        items: section.items.map(item => ({\n            ...item,\n            // path: getAbsolutePath(item.Component),\n            path: component_to_path[item.Component.displayname || item.Component.name],\n\n        })),\n    }));\n\n    const all_items = data.reduce((all, section) => [...all, ...section.items], []);\n    return (\n        <div className='settings container'>\n            <div className='settings__sidebar desktop-only'>\n                <Menu data={data} />\n            </div>\n            <div className='mobile-only'>\n                <MobileDropdown all_items={all_items}>\n                    <Menu data={data} />\n                </MobileDropdown>\n            </div>\n            <div className='settings__content'>\n                <Switch>\n                    {\n                        all_items.map(({ Component, title, description, path }) => (\n                            <Route\n                                key={path}\n                                path={path}\n                                render={() => <Component title={title} description={description} />}\n                            />\n                        ))\n                    }\n                    <Redirect from={match.url} to={all_items[0].path} />\n                </Switch>\n            </div>\n        </div>\n    );\n};\n\nSettings.propTypes = {\n    match : PropTypes.object,\n    routes: PropTypes.arrayOf(\n        PropTypes.shape({\n            component: PropTypes.func,\n            path     : PropTypes.string,\n        })\n    ),\n};\n\nexport default Settings;\n","import { localize }           from '_common/localize';\nimport AccountPassword        from './sections/account_password.jsx';\nimport ApiToken               from './sections/api_token.jsx';\nimport AuthorizedApplications from './sections/authorized_applications.jsx';\nimport CashierPassword        from './sections/cashier_password.jsx';\nimport FinancialAssessment    from './sections/financial_assessment.jsx';\nimport Limits                 from './sections/limits.jsx';\nimport LoginHistory           from './sections/login_history.jsx';\nimport PersonalDetails        from './sections/personal_details.jsx';\nimport SelfExclusion          from './sections/self_exclusion.jsx';\n\nconst data = [\n    {\n        title: localize('Profile'),\n        items: [\n            {\n                title      : localize('Personal Details'),\n                description: localize('View your personal information.'),\n                img_src    : 'images/app_2/settings/ic-personal-details.svg',\n                Component  : PersonalDetails,\n            },\n            {\n                title      : localize('Financial Assessment'),\n                description: localize('View your financial assessment settings'),\n                img_src    : 'images/app_2/settings/ic-financial-assesment.svg',\n                Component  : FinancialAssessment,\n            },\n        ],\n    },\n    {\n        title: localize('Security & Limits'),\n        items: [\n            {\n                title      : localize('Account Password'),\n                description: localize('Change your main login password.'),\n                img_src    : 'images/app_2/settings/ic-account-password.svg',\n                Component  : AccountPassword,\n            },\n            {\n                title      : localize('Cashier Password'),\n                description: localize('Change the password used for deposits and withdrawals'),\n                img_src    : 'images/app_2/settings/ic-cashier-password.svg',\n                Component  : CashierPassword,\n            },\n            {\n                title      : localize('Self Exclusion'),\n                description: localize('Facility that allows you to set limits on your account.'),\n                img_src    : 'images/app_2/settings/ic-self-exclusion.svg',\n                Component  : SelfExclusion,\n            },\n            {\n                title      : localize('Limits'),\n                description: localize('View your trading and withdrawal limits'),\n                img_src    : 'images/app_2/settings/ic-limits.svg',\n                Component  : Limits,\n            },\n            {\n                title      : localize('Login History'),\n                description: localize('View your login history'),\n                img_src    : 'images/app_2/settings/ic-login-history.svg',\n                Component  : LoginHistory,\n            },\n            {\n                title      : localize('API Token'),\n                description: localize('API token for third party applications'),\n                img_src    : 'images/app_2/settings/ic-api-token.svg',\n                Component  : ApiToken,\n            },\n            {\n                title      : localize('Authorized Applications'),\n                description: localize('Manage your authorised applications'),\n                img_src    : 'images/app_2/settings/ic-authorised-applications.svg',\n                Component  : AuthorizedApplications,\n            },\n        ],\n    },\n];\n\nexport default data;\n","import GTM              from '_common/base/gtm';\nimport * as SocketCache from '_common/base/socket_cache';\nimport Client           from '_common/base/client_base';\n\n/**\n * Switch to the given loginid account.\n *\n * @param loginid\n */\nexport const switchAccount = (loginid) => {\n    if (!loginid || !Client.get('token', loginid)) {\n        return;\n    }\n    sessionStorage.setItem('active_tab', '1');\n    // set local storage\n    GTM.setLoginFlag();\n    Client.set('cashier_confirmed', 0);\n    Client.set('accepted_bch', 0);\n    Client.set('loginid', loginid);\n    SocketCache.clear();\n    window.location.reload();\n};\n\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport Client               from '_common/base/client_base';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!Client.isValidLoginid()) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== Client.get('loginid')) {\n                        requestLogout();\n                    } else {\n                        Client.responseAuthorize(response);\n                        setBalance(response.authorize.balance);\n                        WS.subscribeBalance(ResponseHandlers.balance);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(response.authorize.country || Client.get('residence'));\n                        if (!Client.get('is_virtual')) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !Client.get('accepted_bch')) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    Client.set('email', response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            Client.set('residence', residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        Client.set('balance', balance);\n        client_store.balance = balance;\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import BinarySocket   from '_common/base/socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '_common/utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // remove subscription info when first response returned error\n                // or not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                !sub_info.stream_id && (response.error || response.msg_type === sub_info.msg_type)\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        // find corresponding id(s)\n        const sub_ids = Object.keys(subscriptions).filter(id => (\n            subscriptions[id].msg_type === msg_type &&\n            hasCallbackFunction(id, fncCallback)\n        ));\n\n        const forgets_list = [];\n        sub_ids.forEach((id) => {\n            if (match_values && !hasValues(subscriptions[id].request, match_values)) {\n                return;\n            }\n            const stream_id = subscriptions[id].stream_id;\n            if (stream_id && subscriptions[id].subscribers.length === 1) {\n                delete subscriptions[id];\n                forgets_list.push(forgetStream(stream_id));\n            } else {\n                // there are other subscribers, or for some reason there is no stream_id:\n                // (i.e. returned an error, or forget() being called before the first response)\n                subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        subscribe,\n        forget,\n        forgetAll,\n    };\n})();\n\nexport default SubscriptionManager;\n","import BinarySocket        from '_common/base/socket_base';\nimport { isEmptyObject }   from '_common/utility';\nimport SubscriptionManager from './subscription_manager';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    // TODO: don't localize on every call\n    return {\n        [localize('Contract Type')] : getContractTypeDisplay()[contract_type],\n        [localize('Start Time')]    : txt_start_time,\n        [localize('Entry Spot')]    : txt_entry_spot,\n        [localize('Purchase Price')]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        currency,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    // TODO: don't localize on every call\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [localize('End Time')]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [localize('Exit Spot')]     : end_spot ? addComma(end_spot) : '-',\n            [localize('Exit Spot Time')]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [localize('Payout')]: <Money amount={indicative_price} currency={currency} />,\n    };\n};\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart_barriers';\nimport { createChartMarkers } from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }          from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }           from './Helpers/logic';\nimport BaseStore              from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.contract_id = contract_id;\n        this.smart_chart = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, true);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error = true;\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    onMount() {\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import {\n    action,\n    computed,\n    observable }                      from 'mobx';\nimport moment                         from 'moment';\nimport Client                         from '_common/base/client_base';\nimport { WS }                         from 'Services';\nimport { formatStatementTransaction } from './Helpers/format_response';\nimport BaseStore                      from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @action.bound\n    clearTable() {\n        this.data            = [];\n        this.has_loaded_all  = false;\n        this.is_loading      = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to   && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            }\n        ).then(this.statementHandler);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const currency = Client.get('currency');\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction, currency));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    onMount() {\n        this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.clearTable();\n        this.clearDateFilter();\n    }\n\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n}\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import { WS }            from 'Services';\nimport {\n    buildCurrenciesList,\n    getDefaultCurrency } from '../Helpers/currency';\n\nexport const getCurrenciesAsync = async(currency) => {\n    const response = await WS.payoutCurrencies();\n\n    const currencies_list  = buildCurrenciesList(response.payout_currencies);\n    const default_currency = getDefaultCurrency(currencies_list, currency);\n\n    return {\n        currencies_list,\n        ...(default_currency),\n    };\n};\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = (store) => {\n    const { contract_type, start_date, duration_unit, expiry_time } = store;\n    let { start_time, expiry_date } = store;\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_date = ContractType.getExpiryDate(expiry_date, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    const obj_expiry_time = ContractType.getExpiryTime(sessions, start_date, start_time, expiry_date, expiry_time);\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall  : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low   : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch      : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end        : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay       : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian      : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd   : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call    : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put     : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low: { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'last_digit',\n    'start_date',\n    'symbol',\n];\n\nexport const non_proposal_query_string_variable = [\n    'contract_start_type',\n    'expiry_type',\n];\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/duration.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\nimport StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import { localize } from '_common/localize';\n\nconst getValidationRules = () => ({\n    amount: [\n        ['req'    , { message: localize('Amount is a required field.') }],\n        ['number' , { min: 0, type: 'float' }],\n    ],\n    barrier_1: [\n        ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n        ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n        ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n        ['custom' , { func: (value, options, store) => store.barrier_count > 1 ? +value > +store.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n    ],\n    barrier_2: [\n        ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n        ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n        ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n        ['custom' , { func: (value, options, store) => +store.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n    ],\n    duration: [\n        ['req'    , { message: localize('Duration is a required field.') }],\n    ],\n});\n\nexport default getValidationRules;\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import moment                    from 'moment';\nimport { localize }              from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }           from '_common/utility';\nimport { WS }                    from 'Services';\nimport { buildBarriersConfig }   from './barrier';\nimport { buildDurationConfig }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }         from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }          from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = time.split(':');\n        return moment.utc(isNaN(date) ? date : +date * 1000).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: getValidTime(sessions, buildMoment(start_date, start_time)),\n    });\n\n    const getExpiryDate = (expiry_date, start_date) => {\n        const moment_start  = moment.utc(start_date ? start_date * 1000 : undefined);\n        const moment_expiry = moment.utc(expiry_date || undefined);\n        // forward starting contracts should only show today and tomorrow as expiry date\n        const is_invalid = moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n        return {\n            expiry_date: (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD'),\n        };\n    };\n\n    // has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is after start time\n    const getExpiryTime = (sessions, start_date, start_time, expiry_date, expiry_time) => {\n        const start_moment = start_date ? buildMoment(start_date, start_time) : moment().utc();\n        const end_moment   = buildMoment(expiry_date, expiry_time);\n\n        let end_time = expiry_time;\n        if (sessions && !isSessionAvailable(sessions, end_moment)) {\n            end_time = getValidTime(sessions, end_moment, start_moment);\n        }\n        if (end_moment.isSameOrBefore(start_moment)) {\n            const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n            const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n            end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n        }\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getExpiryDate,\n        getExpiryTime,\n        getSessions,\n        getStartTime,\n        getStartType,\n\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && moment.utc(expiry_date).isAfter(moment(server_time).utc(), 'day');\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n","import extend             from 'extend';\nimport Client             from '_common/base/client_base';\nimport { isEmptyObject }  from '_common/utility';\nimport ContractTypeHelper from './contract_type';\n\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Currency      from '../Actions/currency';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n\n    if (!Client.get('currency') && isEmptyObject(store.currencies_list)) {\n        extendOrReplace(snapshot, await Currency.getCurrenciesAsync(store.currency));\n    }\n\n    getMethodsList(store, new_state).forEach((fnc) => {\n        extendOrReplace(snapshot, fnc(snapshot));\n    });\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    Duration.onChangeExpiry,\n    StartDate.onChangeStartDate,\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import moment                              from 'moment';\nimport { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport { convertToUnix }                   from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response) => {\n    const proposal = response.proposal || {};\n    const profit   = (proposal.payout - proposal.ask_price) || 0;\n    const returns  = profit * 100 / (proposal.ask_price || 1);\n\n    return {\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake    : proposal.display_value,\n        payout   : proposal.payout,\n        id       : proposal.id || '',\n        message  : proposal.longcode || response.error.message,\n        has_error: !!response.error,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = moment.utc(store.expiry_date);\n        const start_date  = moment.unix(store.start_date || (store.root_store.common.server_time / 1000)).utc();\n        const is_same_day = expiry_date.isSame(start_date, 'day');\n        const expiry_time = is_same_day ? store.expiry_time : '23:59:59';\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","import moment from 'moment';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === option.date);\n            const current_session   = { open: moment.unix(option.open).utc(), close: moment.unix(option.close).utc() };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : moment.unix(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : option.date,\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = moment.utc(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = moment.utc(),\n    start_moment           = moment.utc(),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, undefined, should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(should_only_check_hour ? session.open.clone().minute(0) : session.open, session.close, null, '[]')))\n);\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    runInAction,\n    reaction }                           from 'mobx';\nimport Client                            from '_common/base/client_base';\nimport {\n    getMinPayout,\n    isCryptocurrency  }                  from '_common/base/currency_base';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { cloneObject, isEmptyObject }    from '_common/utility';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url_helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    non_proposal_query_string_variable } from './Constants/query_string';\nimport getValidationRules                from './Constants/validation_rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract_type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n    @observable currencies_list = {};\n    @observable currency        = Client.get('currency');\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '09:40';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = '12:30';\n    @observable sessions         = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            }\n        );\n\n        if (Client.isLoggedIn) {\n            this.processNewValuesAsync({ currency: Client.get('currency') });\n        }\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            ()=> [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            }\n        );\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        const query_string_values = this.updateQueryString();\n        this.smart_chart = this.root_store.modules.smart_chart;\n\n        if (!this.symbol) {\n            const active_symbols = await WS.activeSymbols();\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n     init = async () => {\n         // To be sure that the website_status response has been received before processing trading page.\n         await BinarySocket.wait('website_status');\n     };\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy && !Client.get('is_virtual')){\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        this.requestProposal();\n        e.preventDefault();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (is_changed_by_user && /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values),\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    proposal_requests = {};\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...non_proposal_query_string_variable,\n                ]\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            WS.forgetAll('proposal').then(() => {\n                Object.keys(this.proposal_requests).forEach((type) => {\n                    WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n                });\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type = response.echo_req.contract_type;\n        this.proposal_info = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index = this.validation_rules.duration.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n    }\n\n    @action.bound\n    onUnmount() {\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore();\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        this.root_store = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {}\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties));\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.constructor.name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.constructor.name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.constructor.name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.constructor.name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}){\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules){\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const validator = new Validator(\n            { [property]: value !== undefined ? value : this[property] },\n            { [property]: this.validation_rules[property] },\n            this\n        );\n\n        validator.isPassed();\n        this.setValidationErrorMessages(property, validator.errors.get(property));\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n}\n\n","import { observable } from 'mobx';\nimport Client         from '_common/base/client_base';\nimport BaseStore      from './base_store';\n\nexport default class ClientStore extends BaseStore {\n    @observable balance;\n    @observable is_logged_in = !!Client.isLoggedIn();\n    @observable loginid      = Client.get('loginid');\n    @observable currency     = Client.get('currency') || '';\n    @observable upgrade_info = Client.getBasicUpgradeInfo();\n    @observable can_upgrade  = this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi;\n}\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status = {};\n    @observable is_network_online = false;\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n}\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore();\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_portfolio_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    @observable screen_width = window.innerWidth;\n\n    constructor() {\n        const local_storage_properties = [\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_portfolio_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('dark'));\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_portfolio_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePortfolioDrawer() { // show and hide Portfolio Drawer\n        this.is_portfolio_drawer_on = !this.is_portfolio_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n}\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const toMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nconst setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time.split(':');\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => moment(date || undefined, date_format).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = moment(date).utc().diff(moment().utc(), 'days');\n    return (!date || diff < 0) ? '' : diff + 1;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n","export * from './date_time';\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import React from 'react';\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const wrapper   = replacers[pair_code];\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","export * from './language';\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = ['JA', 'ACH'];\n    const language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*(${Object.keys(getAllLanguages()).join('|')})/app(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/en/app/';\n};\n\nexport default getBaseName;\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        param_object.sort();\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${param_object.toString()}`);\n        } else {\n            url_object.seach = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, query_string);\n    }\n}\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(this.input[attribute], ruleObject.options, this.store);\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                portfolio_drawer: root_store.ui.is_portfolio_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\ndocument.addEventListener('DOMContentLoaded', initApp);\nwindow.addEventListener('pageshow', (e) => { // Safari doesn't fire load event when using back button\n    if (e.persisted) {\n        initApp();\n    }\n});\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1;\n    }\n    return app_id;\n};\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const is_production = /www\\.binary\\.com/i.test(window.location.hostname);\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = is_production && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getAppId,\n    getSocketURL,\n};\n","import React from 'react';\n\nconst Loading = ({ theme }) => (\n    <div className={`barspinner ${ theme || 'dark'}`}>\n        { Array.from(new Array(5)).map((x, inx) => (\n            <div key={inx} className={`rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","module.exports = CIQ;"],"sourceRoot":""}